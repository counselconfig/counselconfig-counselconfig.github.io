{
    "version": "https://jsonfeed.org/version/1",
    "title": "counsel.config",
    "home_page_url": "http://localhost:4000/",
    "feed_url": "http://localhost:4000/feed.json",
    "description": "Software Engineering Advice",
    "icon": "http://localhost:4000/apple-touch-icon.png",
    "favicon": "http://localhost:4000/favicon.ico",
    "expired": false,
    
    "author": "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}",
    
"items": [
    
        {
            "id": "http://localhost:4000/2023/03/25/forms",
            "title": "Forms",
            "summary": null,
            "content_text": "Letter of No EvidenceA webform I am developing that implememts the GOV.UK Pay API which will soon replace the Request a search for no evidence of British naturalisation.The GOV.UK Pay API  is prety comprehensive, creating an account is free and comes with sandbox testing environments    ",
            "content_html": "<h3 id=\"letter-of-no-evidence\">Letter of No Evidence</h3><p>A webform I am developing that implememts the GOV.UK Pay API which will soon replace the <a target=\"_blank\" rel=\"noopener\" href=\"https://www.nationalarchives.gov.uk/contact-us/request-a-letter-confirming-no-evidence-of-british-naturalisation/form/\">Request a search for no evidence of British naturalisation</a>.</p><p>The <a target=\"_blank\" rel=\"noopener\" href=\"https://docs.payments.service.gov.uk/api_reference/#api-reference\">GOV.UK Pay API</a>  is prety comprehensive, creating an account is free and comes with sandbox testing environments</p><video loop=\"true\" muted=\"\" autoplay=\"\" controls=\"\">    <source src=\"/assets/videos/lone_prototype.mp4\" type=\"video/mp4\" /></video>",
            "url": "http://localhost:4000/2023/03/25/forms",
            
            
            
            "tags": ["Payment","Gateway","API"],
            
            "date_published": "2023-03-25T00:00:00+00:00",
            "date_modified": "2023-03-25T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2023/03/14/collaboration",
            "title": "Collaboration",
            "summary": null,
            "content_text": "I want to share the ways I work in multidisciplinary teams using agile methodologies throuh project managment software - Trello, Azure DevOps, and AltlassianTrelloI often propose the web-based, kanban-style Trello with my mentees so they can create their task boards with different columns and move the tasks between them.Typically columns include task statuses such as To Do, In Progress, Done which allows me to review each stage and comment where necessary:Azure DevOpsSome teams I have worked with agreed to use Azure DevOps (a server collaboration software for software development formerly known as Team Foundation Server and Visual Studio Team System). It has a Azure Boards which helps to deliver value to  users faster using proven agile tools to plan, track, and discuss work.It also has a sprint interface:JiraJira, developed by Atlassian, is another platform that I find myself getting invited to - like above. it is a proprietary issue tracking product that allows bug tracking and agile project management.",
            "content_html": "<p>I want to share the ways I work in multidisciplinary teams using agile methodologies throuh project managment software - Trello, Azure DevOps, and Altlassian</p><h3 id=\"trello\">Trello</h3><p>I often propose the web-based, kanban-style Trello with my mentees so they can create their task boards with different columns and move the tasks between them.</p><style>img {  border: 1px solid #555;}</style><p><img src=\"/assets/images/trello.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><p>Typically columns include task statuses such as To Do, In Progress, Done which allows me to review each stage and comment where necessary:</p><p><img src=\"/assets/images/trellodescription.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><h3 id=\"azure-devops\">Azure DevOps</h3><p>Some teams I have worked with agreed to use Azure DevOps (a server collaboration software for software development formerly known as Team Foundation Server and Visual Studio Team System). It has a Azure Boards which helps to deliver value to  users faster using proven agile tools to plan, track, and discuss work.</p><p><img src=\"/assets/images/board.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><p>It also has a sprint interface:</p><p><img src=\"/assets/images/sprint.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><h3 id=\"jira\">Jira</h3><p>Jira, developed by Atlassian, is another platform that I find myself getting invited to - like above. it is a proprietary issue tracking product that allows bug tracking and agile project management.</p><p><img src=\"/assets/images/Jira.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p>",
            "url": "http://localhost:4000/2023/03/14/collaboration",
            
            
            
            "tags": ["Trello","Atlassian","Azure","DevOps"],
            
            "date_published": "2023-03-14T00:00:00+00:00",
            "date_modified": "2023-03-14T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2023/02/16/ci-cd",
            "title": "CI CD",
            "summary": null,
            "content_text": "Setting up the pipelineI have created git workflows for a web application that I built to add pieces to  the Public Record Office Catalog with continuous integration - pulling together all commits within a single codebase - and continuous deployment - pulling commits through the pipeline — automatically packaging on commit pull releases for frequent updates.Here is my yaml code for the automated build:# ASP.NET# Build and test ASP.NET projects.# Add steps that publish symbols, save build artifacts, deploy, and more:# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4trigger:- prodpool:  vmImage: 'windows-latest'variables:  solution: '**/*.sln'  buildPlatform: 'Any CPU'  buildConfiguration: 'Release'steps:- task: NuGetToolInstaller@1- task: NuGetCommand@2  inputs:    restoreSolution: '$(solution)'- task: VSBuild@1  inputs:    solution: '$(solution)'    # publishes website straight to \\a    msbuildArgs: /p:SkipInvalidConfigurations=true /p:DeployOnBuild=true /p:WebPublishMethod=FileSystem /p:publishUrl=\"$(build.artifactstagingdirectory)\\\\\" /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem        # publishes to a website folder    #msbuildArgs: /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"    /p:UseWPP_CopyWebApplication=true  /p:OutDir=\"$(build.artifactstagingdirectory)\"          # origiinal    # msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=false /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactStagingDirectory)\"'        platform: '$(buildPlatform)'    configuration: '$(buildConfiguration)'#- task: PublishBuildArtifacts@1- task: PublishPipelineArtifact@1#https://stackoverflow.com/questions/50495038/msbuild-arguments-to-generate-files#https://stackoverflow.com/questions/55925792/azure-devops-build-task-create-a-zip-with-contents-identical-to-visual-studio-pThe git workflow implements a release process for the web application which I set up to deploy changes to two IIS Web Servers on different virtual machines.I installed self-hosted agents on oth the virtual machines for Azure Pipelines which acts as a computing infrastructure with that runs one job at a time using Windows Services - it requires a Personal Access Token whcih is generated inside of the Azure DevOps server.I can obtain logs of the release to allow me to assess any failures or delays like this:2023-02-14T18:33:10.0149281Z ##[section]Starting: Initialize job2023-02-14T18:33:10.0153979Z Agent name: 'NA-WEB01'2023-02-14T18:33:10.0155577Z Agent machine name: 'NA-WEB01'2023-02-14T18:33:10.0156297Z Current agent version: '2.213.2'2023-02-14T18:33:10.0218074Z Agent running as: 'NA-WEB01$'2023-02-14T18:33:10.0219345Z Agent is running behind proxy server: 'http://NOT SHOWN'2023-02-14T18:33:10.0244619Z Prepare release directory.2023-02-14T18:33:10.0268499Z ReleaseId=161, TeamProjectId=206e7252-4c61-4d42-947a-2b9c73dbef9a, ReleaseDefinitionName=Verity Workaround Pipeline2023-02-14T18:33:10.0748088Z Release folder: C:\\azagent\\A1\\_work\\r1\\a2023-02-14T18:33:10.1358680Z Environment variables available are below.  Note that these environment variables can be referred to in the task (in the ReleaseDefinition) by replacing \"_\" with \".\" e.g. AGENT_NAME environment variable can be referenced using Agent.Name in the ReleaseDefinition: \t\t\t\t[AGENT_CLOUDID] --&gt; []\t\t\t\t[AGENT_DEPLOYMENTGROUPID] --&gt; [83]\t\t\t\t[AGENT_DISABLELOGPLUGIN_TESTFILEPUBLISHERPLUGIN] --&gt; [true]\t\t\t\t[AGENT_DISABLELOGPLUGIN_TESTRESULTLOGPLUGIN] --&gt; [true]\t\t\t\t[AGENT_HOMEDIRECTORY] --&gt; [C:\\azagent\\A1]\t\t\t\t[AGENT_ID] --&gt; [17]\t\t\t\t[AGENT_JOBNAME] --&gt; [Release]\t\t\t\t[AGENT_MACHINENAME] --&gt; [NA-WEB01]\t\t\t\t[AGENT_NAME] --&gt; [NA-WEB01]\t\t\t\t[AGENT_OS] --&gt; [Windows_NT]\t\t\t\t[AGENT_OSARCHITECTURE] --&gt; [X64]\t\t\t\t[AGENT_PROXYURL] --&gt; [http://10.101.1.20:8080]\t\t\t\t[AGENT_RELEASEDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\r1\\a]\t\t\t\t[AGENT_RETAINDEFAULTENCODING] --&gt; [false]\t\t\t\t[AGENT_ROOTDIRECTORY] --&gt; [C:\\azagent\\A1\\_work]\t\t\t\t[AGENT_SERVEROMDIRECTORY] --&gt; [C:\\azagent\\A1\\externals\\vstsom]\t\t\t\t[AGENT_TASKRESTRICTIONSENFORCEMENTMODE] --&gt; [Enabled]\t\t\t\t[AGENT_TEMPDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\_temp]\t\t\t\t[AGENT_TOOLSDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\_tool]\t\t\t\t[AGENT_VERSION] --&gt; [2.213.2]\t\t\t\t[AGENT_WORKFOLDER] --&gt; [C:\\azagent\\A1\\_work]\t\t\t\t[AZURE_HTTP_USER_AGENT] --&gt; [VSTS_3d672293-66c3-435f-8fd8-3a72112eb2e8_release_4_161_235_1]\t\t\t\t[BUILD_BUILDID] --&gt; [132]\t\t\t\t[BUILD_BUILDNUMBER] --&gt; [20230214.8]\t\t\t\t[BUILD_BUILDURI] --&gt; [vstfs:///Build/Build/132]\t\t\t\t[BUILD_DEFINITIONID] --&gt; [3]\t\t\t\t[BUILD_DEFINITIONNAME] --&gt; [Verity Workaround]\t\t\t\t[BUILD_PROJECTID] --&gt; [206e7252-4c61-4d42-947a-2b9c73dbef9a]\t\t\t\t[BUILD_PROJECTNAME] --&gt; [Dot NET Projects]\t\t\t\t[BUILD_REPOSITORY_ID] --&gt; [c1c8f804-af9d-4d5a-9715-f2b2671228f9]\t\t\t\t[BUILD_REPOSITORY_NAME] --&gt; [Verity Workaround]\t\t\t\t[BUILD_REPOSITORY_PROVIDER] --&gt; [TfsGit]\t\t\t\t[BUILD_REQUESTEDFOR] --&gt; [Dominic Love]\t\t\t\t[BUILD_REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[BUILD_SOURCEBRANCH] --&gt; [refs/heads/prod]\t\t\t\t[BUILD_SOURCEBRANCHNAME] --&gt; [prod]\t\t\t\t[BUILD_SOURCEVERSION] --&gt; [8a20d82a52e991d030f78c51c05c50525a9419f0]\t\t\t\t[BUILD_TYPE] --&gt; [Build]\t\t\t\t[GIT_TERMINAL_PROMPT] --&gt; [0]\t\t\t\t[MSDEPLOY_HTTP_USER_AGENT] --&gt; [VSTS_3d672293-66c3-435f-8fd8-3a72112eb2e8_release_4_161_235_1]\t\t\t\t[PARAMETERS_ACTIONIISWEBSITE] --&gt; [CreateOrUpdateWebsite]\t\t\t\t[PARAMETERS_ADDBINDING] --&gt; [True]\t\t\t\t[PARAMETERS_APPPOOLNAME] --&gt; []\t\t\t\t[PARAMETERS_BINDINGS] --&gt; [{\"bindings\":[{\"protocol\":\"http\",\"ipAddress\":\"All Unassigned\",\"port\":\"80\",\"hostname\":\"\",\"sslThumbprint\":\"\",\"sniFlag\":false}]}]\t\t\t\t[PARAMETERS_IISDEPLOYMENTTYPE] --&gt; [IISWebsite]\t\t\t\t[PARAMETERS_VIRTUALPATHFORAPPLICATION] --&gt; []\t\t\t\t[PARAMETERS_WEBSITENAME] --&gt; [Default Web Site]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_BUILDID] --&gt; [132]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_BUILDNUMBER] --&gt; [20230214.8]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_BUILDURI] --&gt; [vstfs:///Build/Build/132]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_DEFINITIONID] --&gt; [3]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_DEFINITIONNAME] --&gt; [Verity Workaround]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_PROJECTID] --&gt; [206e7252-4c61-4d42-947a-2b9c73dbef9a]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_PROJECTNAME] --&gt; [Dot NET Projects]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REPOSITORY_ID] --&gt; [c1c8f804-af9d-4d5a-9715-f2b2671228f9]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REPOSITORY_NAME] --&gt; [Verity Workaround]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REPOSITORY_PROVIDER] --&gt; [TfsGit]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REQUESTEDFOR] --&gt; [Dominic Love]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_SOURCEBRANCH] --&gt; [refs/heads/prod]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_SOURCEBRANCHNAME] --&gt; [prod]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_SOURCEVERSION] --&gt; [8a20d82a52e991d030f78c51c05c50525a9419f0]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_TYPE] --&gt; [Build]\t\t\t\t[RELEASE_ATTEMPTNUMBER] --&gt; [1]\t\t\t\t[RELEASE_DEFINITIONENVIRONMENTID] --&gt; [11]\t\t\t\t[RELEASE_DEFINITIONID] --&gt; [4]\t\t\t\t[RELEASE_DEFINITIONNAME] --&gt; [Verity Workaround Pipeline]\t\t\t\t[RELEASE_DEPLOYMENT_REQUESTEDFOR] --&gt; [Dominic Love]\t\t\t\t[RELEASE_DEPLOYMENT_REQUESTEDFOREMAIL] --&gt; [Dominic.Love@nationalarchives.gov.uk]\t\t\t\t[RELEASE_DEPLOYMENT_REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[RELEASE_DEPLOYMENT_STARTTIME] --&gt; [2023-02-14 18:32:48Z]\t\t\t\t[RELEASE_DEPLOYMENTID] --&gt; [189]\t\t\t\t[RELEASE_DEPLOYPHASEID] --&gt; [185]\t\t\t\t[RELEASE_ENVIRONMENTID] --&gt; [235]\t\t\t\t[RELEASE_ENVIRONMENTNAME] --&gt; [Production]\t\t\t\t[RELEASE_ENVIRONMENTS_DEVTEST_STATUS] --&gt; [NotStarted]\t\t\t\t[RELEASE_ENVIRONMENTS_PRODUCTION_STATUS] --&gt; [InProgress]\t\t\t\t[RELEASE_ENVIRONMENTURI] --&gt; [vstfs:///ReleaseManagement/Environment/235]\t\t\t\t[RELEASE_PRIMARYARTIFACTSOURCEALIAS] --&gt; [_Verity Workaround]\t\t\t\t[RELEASE_REASON] --&gt; [ContinuousIntegration]\t\t\t\t[RELEASE_RELEASEDESCRIPTION] --&gt; [Triggered by Verity Workaround 20230214.8.]\t\t\t\t[RELEASE_RELEASEID] --&gt; [161]\t\t\t\t[RELEASE_RELEASENAME] --&gt; [Release-153]\t\t\t\t[RELEASE_RELEASEURI] --&gt; [vstfs:///ReleaseManagement/Release/161]\t\t\t\t[RELEASE_RELEASEWEBURL] --&gt; [https://dev.azure.com/TNAKEW/206e7252-4c61-4d42-947a-2b9c73dbef9a/_release?releaseId=161&amp;_a=release-summary]\t\t\t\t[RELEASE_REQUESTEDFOR] --&gt; [Dominic Love]\t\t\t\t[RELEASE_REQUESTEDFOREMAIL] --&gt; [Dominic.Love@nationalarchives.gov.uk]\t\t\t\t[RELEASE_REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[RELEASE_SKIPARTIFACTSDOWNLOAD] --&gt; [False]\t\t\t\t[RELEASE_TRIGGERINGARTIFACT_ALIAS] --&gt; [_Verity Workaround]\t\t\t\t[REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[SYSTEM] --&gt; [deployment]\t\t\t\t[SYSTEM_ARTIFACTSDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\r1\\a]\t\t\t\t[SYSTEM_COLLECTIONID] --&gt; [3d672293-66c3-435f-8fd8-3a72112eb2e8]\t\t\t\t[SYSTEM_CULTURE] --&gt; [en-US]\t\t\t\t[SYSTEM_DEFAULTWORKINGDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\r1\\a]\t\t\t\t[SYSTEM_ENABLEACCESSTOKEN] --&gt; [False]\t\t\t\t[SYSTEM_HOSTTYPE] --&gt; [deployment]\t\t\t\t[SYSTEM_JOBID] --&gt; [c076cbda-a366-439b-81e8-1baf969f8530]\t\t\t\t[SYSTEM_JOBPARALLELISMTAG] --&gt; [Private]\t\t\t\t[SYSTEM_PLANID] --&gt; [935634af-adfd-4dea-822d-b9732aca132a]\t\t\t\t[SYSTEM_SERVERTYPE] --&gt; [Hosted]\t\t\t\t[SYSTEM_TASKDEFINITIONSURI] --&gt; [https://dev.azure.com/TNAKEW/]\t\t\t\t[SYSTEM_TEAMFOUNDATIONCOLLECTIONURI] --&gt; [https://dev.azure.com/TNAKEW/]\t\t\t\t[SYSTEM_TEAMFOUNDATIONSERVERURI] --&gt; [https://vsrm.dev.azure.com/TNAKEW/]\t\t\t\t[SYSTEM_TEAMPROJECT] --&gt; [Dot NET Projects]\t\t\t\t[SYSTEM_TEAMPROJECTID] --&gt; [206e7252-4c61-4d42-947a-2b9c73dbef9a]\t\t\t\t[SYSTEM_TIMELINEID] --&gt; [935634af-adfd-4dea-822d-b9732aca132a]\t\t\t\t[SYSTEM_WORKFOLDER] --&gt; [C:\\azagent\\A1\\_work]\t\t\t\t[VSTS_ARM_REST_IGNORE_SSL_ERRORS] --&gt; [True]2023-02-14T18:33:10.5585603Z Creating artifacts directory: C:\\azagent\\A1\\_work\\r1\\a2023-02-14T18:33:10.9378272Z Created artifacts directory: C:\\azagent\\A1\\_work\\r1\\a2023-02-14T18:33:11.1999638Z Download all required tasks.2023-02-14T18:33:11.2793158Z Checking job knob settings.2023-02-14T18:33:11.2830762Z Finished checking job knob settings.2023-02-14T18:33:11.9275117Z Start tracking orphan processes.2023-02-14T18:33:11.9654118Z ##[section]Finishing: Initialize job",
            "content_html": "<h1 id=\"setting-up-the-pipeline\">Setting up the pipeline</h1><p>I have created git workflows for a <a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/counselconfig/verityworkaround \">web application</a> that I built to add pieces to  the Public Record Office Catalog with continuous integration - pulling together all commits within a single codebase - and continuous deployment - pulling commits through the pipeline — automatically packaging on commit pull releases for frequent updates.</p><style>img {  border: 1px solid #555;}</style><p><img src=\"/assets/images/pipeline.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><p>Here is my yaml code for the automated build:</p><div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># ASP.NET</span><span class=\"c1\"># Build and test ASP.NET projects.</span><span class=\"c1\"># Add steps that publish symbols, save build artifacts, deploy, and more:</span><span class=\"c1\"># https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4</span><span class=\"na\">trigger</span><span class=\"pi\">:</span><span class=\"pi\">-</span> <span class=\"s\">prod</span><span class=\"na\">pool</span><span class=\"pi\">:</span>  <span class=\"na\">vmImage</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">windows-latest'</span><span class=\"na\">variables</span><span class=\"pi\">:</span>  <span class=\"na\">solution</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">**/*.sln'</span>  <span class=\"na\">buildPlatform</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">Any</span><span class=\"nv\"> </span><span class=\"s\">CPU'</span>  <span class=\"na\">buildConfiguration</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">Release'</span><span class=\"na\">steps</span><span class=\"pi\">:</span><span class=\"pi\">-</span> <span class=\"na\">task</span><span class=\"pi\">:</span> <span class=\"s\">NuGetToolInstaller@1</span><span class=\"pi\">-</span> <span class=\"na\">task</span><span class=\"pi\">:</span> <span class=\"s\">NuGetCommand@2</span>  <span class=\"na\">inputs</span><span class=\"pi\">:</span>    <span class=\"na\">restoreSolution</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">$(solution)'</span><span class=\"pi\">-</span> <span class=\"na\">task</span><span class=\"pi\">:</span> <span class=\"s\">VSBuild@1</span>  <span class=\"na\">inputs</span><span class=\"pi\">:</span>    <span class=\"na\">solution</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">$(solution)'</span>    <span class=\"c1\"># publishes website straight to \\a</span>    <span class=\"na\">msbuildArgs</span><span class=\"pi\">:</span> <span class=\"s\">/p:SkipInvalidConfigurations=true /p:DeployOnBuild=true /p:WebPublishMethod=FileSystem /p:publishUrl=\"$(build.artifactstagingdirectory)\\\\\" /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem</span>        <span class=\"c1\"># publishes to a website folder</span>    <span class=\"c1\">#msbuildArgs: /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"    /p:UseWPP_CopyWebApplication=true  /p:OutDir=\"$(build.artifactstagingdirectory)\"  </span>        <span class=\"c1\"># origiinal</span>    <span class=\"c1\"># msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=false /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactStagingDirectory)\"'</span>        <span class=\"na\">platform</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">$(buildPlatform)'</span>    <span class=\"na\">configuration</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">$(buildConfiguration)'</span><span class=\"c1\">#- task: PublishBuildArtifacts@1</span><span class=\"pi\">-</span> <span class=\"na\">task</span><span class=\"pi\">:</span> <span class=\"s\">PublishPipelineArtifact@1</span><span class=\"c1\">#https://stackoverflow.com/questions/50495038/msbuild-arguments-to-generate-files</span><span class=\"c1\">#https://stackoverflow.com/questions/55925792/azure-devops-build-task-create-a-zip-with-contents-identical-to-visual-studio-p</span></code></pre></div></div><p>The git workflow implements a release process for the web application which I set up to deploy changes to two IIS Web Servers on different virtual machines.</p><p><img src=\"/assets/images/Releases.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><p>I installed self-hosted agents on oth the virtual machines for Azure Pipelines which acts as a computing infrastructure with that runs one job at a time using Windows Services - it requires a Personal Access Token whcih is generated inside of the Azure DevOps server.</p><p><img src=\"/assets/images/deploymentgroup.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><p>I can obtain logs of the release to allow me to assess any failures or delays like this:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>2023-02-14T18:33:10.0149281Z ##[section]Starting: Initialize job2023-02-14T18:33:10.0153979Z Agent name: 'NA-WEB01'2023-02-14T18:33:10.0155577Z Agent machine name: 'NA-WEB01'2023-02-14T18:33:10.0156297Z Current agent version: '2.213.2'2023-02-14T18:33:10.0218074Z Agent running as: 'NA-WEB01$'2023-02-14T18:33:10.0219345Z Agent is running behind proxy server: 'http://NOT SHOWN'2023-02-14T18:33:10.0244619Z Prepare release directory.2023-02-14T18:33:10.0268499Z ReleaseId=161, TeamProjectId=206e7252-4c61-4d42-947a-2b9c73dbef9a, ReleaseDefinitionName=Verity Workaround Pipeline2023-02-14T18:33:10.0748088Z Release folder: C:\\azagent\\A1\\_work\\r1\\a2023-02-14T18:33:10.1358680Z Environment variables available are below.  Note that these environment variables can be referred to in the task (in the ReleaseDefinition) by replacing \"_\" with \".\" e.g. AGENT_NAME environment variable can be referenced using Agent.Name in the ReleaseDefinition: \t\t\t\t[AGENT_CLOUDID] --&gt; []\t\t\t\t[AGENT_DEPLOYMENTGROUPID] --&gt; [83]\t\t\t\t[AGENT_DISABLELOGPLUGIN_TESTFILEPUBLISHERPLUGIN] --&gt; [true]\t\t\t\t[AGENT_DISABLELOGPLUGIN_TESTRESULTLOGPLUGIN] --&gt; [true]\t\t\t\t[AGENT_HOMEDIRECTORY] --&gt; [C:\\azagent\\A1]\t\t\t\t[AGENT_ID] --&gt; [17]\t\t\t\t[AGENT_JOBNAME] --&gt; [Release]\t\t\t\t[AGENT_MACHINENAME] --&gt; [NA-WEB01]\t\t\t\t[AGENT_NAME] --&gt; [NA-WEB01]\t\t\t\t[AGENT_OS] --&gt; [Windows_NT]\t\t\t\t[AGENT_OSARCHITECTURE] --&gt; [X64]\t\t\t\t[AGENT_PROXYURL] --&gt; [http://10.101.1.20:8080]\t\t\t\t[AGENT_RELEASEDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\r1\\a]\t\t\t\t[AGENT_RETAINDEFAULTENCODING] --&gt; [false]\t\t\t\t[AGENT_ROOTDIRECTORY] --&gt; [C:\\azagent\\A1\\_work]\t\t\t\t[AGENT_SERVEROMDIRECTORY] --&gt; [C:\\azagent\\A1\\externals\\vstsom]\t\t\t\t[AGENT_TASKRESTRICTIONSENFORCEMENTMODE] --&gt; [Enabled]\t\t\t\t[AGENT_TEMPDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\_temp]\t\t\t\t[AGENT_TOOLSDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\_tool]\t\t\t\t[AGENT_VERSION] --&gt; [2.213.2]\t\t\t\t[AGENT_WORKFOLDER] --&gt; [C:\\azagent\\A1\\_work]\t\t\t\t[AZURE_HTTP_USER_AGENT] --&gt; [VSTS_3d672293-66c3-435f-8fd8-3a72112eb2e8_release_4_161_235_1]\t\t\t\t[BUILD_BUILDID] --&gt; [132]\t\t\t\t[BUILD_BUILDNUMBER] --&gt; [20230214.8]\t\t\t\t[BUILD_BUILDURI] --&gt; [vstfs:///Build/Build/132]\t\t\t\t[BUILD_DEFINITIONID] --&gt; [3]\t\t\t\t[BUILD_DEFINITIONNAME] --&gt; [Verity Workaround]\t\t\t\t[BUILD_PROJECTID] --&gt; [206e7252-4c61-4d42-947a-2b9c73dbef9a]\t\t\t\t[BUILD_PROJECTNAME] --&gt; [Dot NET Projects]\t\t\t\t[BUILD_REPOSITORY_ID] --&gt; [c1c8f804-af9d-4d5a-9715-f2b2671228f9]\t\t\t\t[BUILD_REPOSITORY_NAME] --&gt; [Verity Workaround]\t\t\t\t[BUILD_REPOSITORY_PROVIDER] --&gt; [TfsGit]\t\t\t\t[BUILD_REQUESTEDFOR] --&gt; [Dominic Love]\t\t\t\t[BUILD_REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[BUILD_SOURCEBRANCH] --&gt; [refs/heads/prod]\t\t\t\t[BUILD_SOURCEBRANCHNAME] --&gt; [prod]\t\t\t\t[BUILD_SOURCEVERSION] --&gt; [8a20d82a52e991d030f78c51c05c50525a9419f0]\t\t\t\t[BUILD_TYPE] --&gt; [Build]\t\t\t\t[GIT_TERMINAL_PROMPT] --&gt; [0]\t\t\t\t[MSDEPLOY_HTTP_USER_AGENT] --&gt; [VSTS_3d672293-66c3-435f-8fd8-3a72112eb2e8_release_4_161_235_1]\t\t\t\t[PARAMETERS_ACTIONIISWEBSITE] --&gt; [CreateOrUpdateWebsite]\t\t\t\t[PARAMETERS_ADDBINDING] --&gt; [True]\t\t\t\t[PARAMETERS_APPPOOLNAME] --&gt; []\t\t\t\t[PARAMETERS_BINDINGS] --&gt; [{\"bindings\":[{\"protocol\":\"http\",\"ipAddress\":\"All Unassigned\",\"port\":\"80\",\"hostname\":\"\",\"sslThumbprint\":\"\",\"sniFlag\":false}]}]\t\t\t\t[PARAMETERS_IISDEPLOYMENTTYPE] --&gt; [IISWebsite]\t\t\t\t[PARAMETERS_VIRTUALPATHFORAPPLICATION] --&gt; []\t\t\t\t[PARAMETERS_WEBSITENAME] --&gt; [Default Web Site]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_BUILDID] --&gt; [132]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_BUILDNUMBER] --&gt; [20230214.8]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_BUILDURI] --&gt; [vstfs:///Build/Build/132]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_DEFINITIONID] --&gt; [3]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_DEFINITIONNAME] --&gt; [Verity Workaround]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_PROJECTID] --&gt; [206e7252-4c61-4d42-947a-2b9c73dbef9a]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_PROJECTNAME] --&gt; [Dot NET Projects]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REPOSITORY_ID] --&gt; [c1c8f804-af9d-4d5a-9715-f2b2671228f9]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REPOSITORY_NAME] --&gt; [Verity Workaround]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REPOSITORY_PROVIDER] --&gt; [TfsGit]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REQUESTEDFOR] --&gt; [Dominic Love]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_SOURCEBRANCH] --&gt; [refs/heads/prod]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_SOURCEBRANCHNAME] --&gt; [prod]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_SOURCEVERSION] --&gt; [8a20d82a52e991d030f78c51c05c50525a9419f0]\t\t\t\t[RELEASE_ARTIFACTS__VERITY_WORKAROUND_TYPE] --&gt; [Build]\t\t\t\t[RELEASE_ATTEMPTNUMBER] --&gt; [1]\t\t\t\t[RELEASE_DEFINITIONENVIRONMENTID] --&gt; [11]\t\t\t\t[RELEASE_DEFINITIONID] --&gt; [4]\t\t\t\t[RELEASE_DEFINITIONNAME] --&gt; [Verity Workaround Pipeline]\t\t\t\t[RELEASE_DEPLOYMENT_REQUESTEDFOR] --&gt; [Dominic Love]\t\t\t\t[RELEASE_DEPLOYMENT_REQUESTEDFOREMAIL] --&gt; [Dominic.Love@nationalarchives.gov.uk]\t\t\t\t[RELEASE_DEPLOYMENT_REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[RELEASE_DEPLOYMENT_STARTTIME] --&gt; [2023-02-14 18:32:48Z]\t\t\t\t[RELEASE_DEPLOYMENTID] --&gt; [189]\t\t\t\t[RELEASE_DEPLOYPHASEID] --&gt; [185]\t\t\t\t[RELEASE_ENVIRONMENTID] --&gt; [235]\t\t\t\t[RELEASE_ENVIRONMENTNAME] --&gt; [Production]\t\t\t\t[RELEASE_ENVIRONMENTS_DEVTEST_STATUS] --&gt; [NotStarted]\t\t\t\t[RELEASE_ENVIRONMENTS_PRODUCTION_STATUS] --&gt; [InProgress]\t\t\t\t[RELEASE_ENVIRONMENTURI] --&gt; [vstfs:///ReleaseManagement/Environment/235]\t\t\t\t[RELEASE_PRIMARYARTIFACTSOURCEALIAS] --&gt; [_Verity Workaround]\t\t\t\t[RELEASE_REASON] --&gt; [ContinuousIntegration]\t\t\t\t[RELEASE_RELEASEDESCRIPTION] --&gt; [Triggered by Verity Workaround 20230214.8.]\t\t\t\t[RELEASE_RELEASEID] --&gt; [161]\t\t\t\t[RELEASE_RELEASENAME] --&gt; [Release-153]\t\t\t\t[RELEASE_RELEASEURI] --&gt; [vstfs:///ReleaseManagement/Release/161]\t\t\t\t[RELEASE_RELEASEWEBURL] --&gt; [https://dev.azure.com/TNAKEW/206e7252-4c61-4d42-947a-2b9c73dbef9a/_release?releaseId=161&amp;_a=release-summary]\t\t\t\t[RELEASE_REQUESTEDFOR] --&gt; [Dominic Love]\t\t\t\t[RELEASE_REQUESTEDFOREMAIL] --&gt; [Dominic.Love@nationalarchives.gov.uk]\t\t\t\t[RELEASE_REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[RELEASE_SKIPARTIFACTSDOWNLOAD] --&gt; [False]\t\t\t\t[RELEASE_TRIGGERINGARTIFACT_ALIAS] --&gt; [_Verity Workaround]\t\t\t\t[REQUESTEDFORID] --&gt; [7184bcbb-f249-6a1d-ad46-f620dab71db3]\t\t\t\t[SYSTEM] --&gt; [deployment]\t\t\t\t[SYSTEM_ARTIFACTSDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\r1\\a]\t\t\t\t[SYSTEM_COLLECTIONID] --&gt; [3d672293-66c3-435f-8fd8-3a72112eb2e8]\t\t\t\t[SYSTEM_CULTURE] --&gt; [en-US]\t\t\t\t[SYSTEM_DEFAULTWORKINGDIRECTORY] --&gt; [C:\\azagent\\A1\\_work\\r1\\a]\t\t\t\t[SYSTEM_ENABLEACCESSTOKEN] --&gt; [False]\t\t\t\t[SYSTEM_HOSTTYPE] --&gt; [deployment]\t\t\t\t[SYSTEM_JOBID] --&gt; [c076cbda-a366-439b-81e8-1baf969f8530]\t\t\t\t[SYSTEM_JOBPARALLELISMTAG] --&gt; [Private]\t\t\t\t[SYSTEM_PLANID] --&gt; [935634af-adfd-4dea-822d-b9732aca132a]\t\t\t\t[SYSTEM_SERVERTYPE] --&gt; [Hosted]\t\t\t\t[SYSTEM_TASKDEFINITIONSURI] --&gt; [https://dev.azure.com/TNAKEW/]\t\t\t\t[SYSTEM_TEAMFOUNDATIONCOLLECTIONURI] --&gt; [https://dev.azure.com/TNAKEW/]\t\t\t\t[SYSTEM_TEAMFOUNDATIONSERVERURI] --&gt; [https://vsrm.dev.azure.com/TNAKEW/]\t\t\t\t[SYSTEM_TEAMPROJECT] --&gt; [Dot NET Projects]\t\t\t\t[SYSTEM_TEAMPROJECTID] --&gt; [206e7252-4c61-4d42-947a-2b9c73dbef9a]\t\t\t\t[SYSTEM_TIMELINEID] --&gt; [935634af-adfd-4dea-822d-b9732aca132a]\t\t\t\t[SYSTEM_WORKFOLDER] --&gt; [C:\\azagent\\A1\\_work]\t\t\t\t[VSTS_ARM_REST_IGNORE_SSL_ERRORS] --&gt; [True]2023-02-14T18:33:10.5585603Z Creating artifacts directory: C:\\azagent\\A1\\_work\\r1\\a2023-02-14T18:33:10.9378272Z Created artifacts directory: C:\\azagent\\A1\\_work\\r1\\a2023-02-14T18:33:11.1999638Z Download all required tasks.2023-02-14T18:33:11.2793158Z Checking job knob settings.2023-02-14T18:33:11.2830762Z Finished checking job knob settings.2023-02-14T18:33:11.9275117Z Start tracking orphan processes.2023-02-14T18:33:11.9654118Z ##[section]Finishing: Initialize job</code></pre></div></div>",
            "url": "http://localhost:4000/2023/02/16/ci-cd",
            
            
            
            "tags": ["Continuous","Deployment","Integration"],
            
            "date_published": "2023-02-16T00:00:00+00:00",
            "date_modified": "2023-02-16T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2022/12/01/apis-and-postman",
            "title": "RESTful APIs and Postman",
            "summary": null,
            "content_text": "API in basic termsAn Application Programing Interface (API) is essentially a well defined method of communicating with a ‘service’. This means that a service provides a server to which a request can be sent and the server will answer with well defined responses, in accordance with an API specification.REST APIA representational state transfer (REST) API has an architecture which when compliant with REST contraints are coined RESTful, making use of web standards like HTML, JSON XML.I said this would be a basic discusion, so all that we should know about RESTful APIs is that there are four types of actions that are used to communicate with it.      GET: A get action means we ask the service for data - we will check this out later.        POST: This action is typically used to create data in the service.        PUT: This action is used to update already existing data        DELETE: This action is used to delete existing data  Sending parameters and arguments to a RESTful service.A REST request typically has three parts: The URL we are sending the request to, the HEADER of the request (which normally holds basic properties of the request), and in the BODY of the request.      For examples of arguments sent in the URL, a GET action sent to a website selling cats at www.catsforsale.co.uk/user/1234 could be a way to ask for information about user with 1234, and if we also want a list of all their cats, we might do so by sending the GET request to www.catsforsale.co.uk/user/1234?include_cats=true.        The header is sent along with the request - normally, in a browser, the request header is unseen since it is managed by the browser. Now, this is where Postman comes in handy as it lwil let us edit the header.  PostmanI will demonstrate GET requests with Postman using two real APIs, namely SmartSurvey and Eventbrite.SmartSurvey APIThe SmartSurvey API does not require  extra HEADER parameters, which means it be queried using a browser of a preference. Two authentication keys are needed to send a ‘call’ this service, viz: an ‘api_token’, and an ‘api_token_secret’, to let the server know the query can be trusted by an authenticated user. The a target=’_blank’ rel=’noopener’ href=’https://docs.smartsurvey.io/docs’&gt;Smart Survey documentation&lt;/a&gt; explains how to obtain these tokens.There are two endpoints with the SmartSurvey API1. https://api.smartsurvey.io/v1/surveysThe first endpoint above returns a list of all the surveys created. It requires the “api_token” and “api_token_secret” as parameters and two optional parameters for paginating the result:page_size - this specifies how many service should be returned in each call.page - this specifies which page to return.i.e. if page_size=100, and page=1, we get the first 100 surveys. Changing page to page=2 gets us the next 100 surveys and so forth. If page_size and page are not specified we get 1 survey (the latest). Note this service does not use the header, we can test this in any browser, for example:https://api.smartsurvey.io/v1/surveys?api_token=[api_token]&amp;api_token_secret=[api_token_secret]&amp;page_size=100&amp;page=12. https://api.smartsurvey.io/v1/surveys/[survey_id]/responsesThe second type above returns all  responses to the specific survey specified by the survey_id. It takes the same parameters as previously listed (api_token, api_token_secret, page_size and page). It also takes an extra parameter include_labels - this should be set as true as without it the questions and responses will be absent with only question and answer IDs present) e.g. to get the first 100 survey responses for survey ID 421142, open the following link in a browser:https://api.smartsurvey.io/v1/surveys/421142/responses?api_token=[api_token]&amp;api_token_secret=[api_token_secret]&amp;include_labels=true&amp;page_size=100&amp;page=1Query SmartSurvey API with Postman  Add URL request in the URL text field with the “action” on the left is set to GET and press send!SmartSurvey API Basic AuthenticationSmartSurvey supported querystring parameters as exampled above but as of today these are now deprecated and all requests should switch to using Basic Auth. Instead of adding the API Token and Token Secret as parameters in the GET request URL, they take the form of a username and password respectively, which are passed to the header instead à la below:https://api.smartsurvey.io/v1/surveys/421142/responses?include_labels=true&amp;page_size=100&amp;page=1Eventbrite APIThis is the documentation for the Eventbrite API. Authentication in Eventbrite differs from Smart Survey as it is achieved by sending the authentication keys in the HEADER, which means we need to use Postman by adding a key-value pair in the “Headers” tab, with:  Key = “Authorization”  Value = “Bearer [private token]”Check the documetion on how to retrieve your private tokenN.B Eventbrite handles pagination differently than SmartSurvey. As per above the result starts with a “pagination” object with pages count information and a “continuation” code. To get the next page, send the same request again, but with an extra “continuation parameter set (in my case eyJwYWdlIjogMn0).Eventbrite API endpointsThere are many endpoints with Eventbrite API. Here are two:1. https://www.eventbriteapi.com/v3/organizations/0123456789/events?expand=organizer,venueThis returns all events that an organisation has ever created (the number 0123456789 for instance would be the organisation ID):2. https://www.eventbriteapi.com/v3/organizations/1234561011/events?expand=organizer,venueThe second enpoint above calls and returns all tickets attached to an event with additional information about attendees - as shown in Postman below:Pagination information shown and then a list of all the orders for that event.",
            "content_html": "<style>img {  border: 1px solid #555;}</style><h3 id=\"api-in-basic-terms\">API in basic terms</h3><p>An Application Programing Interface (API) is essentially a well defined method of communicating with a ‘service’. This means that a service provides a server to which a request can be sent and the server will answer with well defined responses, in accordance with an API specification.</p><h3 id=\"rest-api\">REST API</h3><p>A representational state transfer (REST) API has an architecture which when compliant with REST contraints are coined RESTful, making use of web standards like HTML, JSON XML.</p><p>I said this would be a basic discusion, so all that we should know about RESTful APIs is that there are four types of actions that are used to communicate with it.</p><ul>  <li>    <p><code class=\"highlighter-rouge\">GET</code>: A get action means we ask the service for data - we will check this out later.</p>  </li>  <li>    <p><code class=\"highlighter-rouge\">POST</code>: This action is typically used to create data in the service.</p>  </li>  <li>    <p><code class=\"highlighter-rouge\">PUT</code>: This action is used to update already existing data</p>  </li>  <li>    <p><code class=\"highlighter-rouge\">DELETE</code>: This action is used to delete existing data</p>  </li></ul><h3 id=\"sending-parameters-and-arguments-to-a-restful-service\">Sending parameters and arguments to a RESTful service.</h3><p>A REST request typically has three parts: The URL we are sending the request to, the HEADER of the request (which normally holds basic properties of the request), and in the BODY of the request.</p><ul>  <li>    <p>For examples of arguments sent in the URL, a <code class=\"highlighter-rouge\">GET</code> action sent to a website selling cats at <ins>www.catsforsale.co.uk/user/1234</ins> could be a way to ask for information about user with 1234, and if we also want a list of all their cats, we might do so by sending the <code class=\"highlighter-rouge\">GET</code> request to <ins>www.catsforsale.co.uk/user/1234?include_cats=true</ins>.</p>  </li>  <li>    <p>The header is sent along with the request - normally, in a browser, the request header is unseen since it is managed by the browser. Now, this is where <a target=\"_blank\" rel=\"noopener\" href=\"https://www.postman.com/\">Postman</a> comes in handy as it lwil let us edit the header.</p>  </li></ul><h3 id=\"postman\">Postman</h3><p>I will demonstrate <code class=\"highlighter-rouge\">GET</code> requests with Postman using two real APIs, namely SmartSurvey and Eventbrite.</p><h3 id=\"smartsurvey-api\">SmartSurvey API</h3><p>The SmartSurvey API does not require  extra HEADER parameters, which means it be queried using a browser of a preference. Two authentication keys are needed to send a ‘call’ this service, viz: an ‘api_token’, and an ‘api_token_secret’, to let the server know the query can be trusted by an authenticated user. The a target=’_blank’ rel=’noopener’ href=’https://docs.smartsurvey.io/docs’&gt;Smart Survey documentation&lt;/a&gt; explains how to obtain these tokens.</p><p>There are two endpoints with the SmartSurvey API</p><p><strong>1. https://api.smartsurvey.io/v1/surveys</strong></p><p>The first endpoint above returns a list of all the surveys created. It requires the “api_token” and “api_token_secret” as parameters and two optional parameters for paginating the result:</p><p><code class=\"highlighter-rouge\">page_size</code> - this specifies how many service should be returned in each call.</p><p><code class=\"highlighter-rouge\">page</code> - this specifies which page to return.</p><p>i.e. if <code class=\"highlighter-rouge\">page_size=100</code>, and <code class=\"highlighter-rouge\">page=1</code>, we get the first 100 surveys. Changing page to page=2 gets us the next 100 surveys and so forth. If <code class=\"highlighter-rouge\">page_size</code> and <code class=\"highlighter-rouge\">page</code> are not specified we get 1 survey (the latest). Note this service does not use the header, we can test this in any browser, for example:</p><p><a target=\"_blank\" rel=\"noopener\" href=\"https://api.smartsurvey.io/v1/surveys?api_token=[api_token]&amp;api_token_secret=[api_token_secret]&amp;page_size=100&amp;page=1\">https://api.smartsurvey.io/v1/surveys?api_token=[api_token]&amp;api_token_secret=[api_token_secret]&amp;page_size=100&amp;page=1</a></p><p><strong>2. https://api.smartsurvey.io/v1/surveys/[survey_id]/responses</strong></p><p>The second type above returns all  responses to the specific survey specified by the <code class=\"highlighter-rouge\">survey_id</code>. It takes the same parameters as previously listed (<code class=\"highlighter-rouge\">api_token</code>, <code class=\"highlighter-rouge\">api_token_secret</code>, <code class=\"highlighter-rouge\">page_size</code> and <code class=\"highlighter-rouge\">page</code>). It also takes an extra parameter <code class=\"highlighter-rouge\">include_labels</code> - this should be set as <code class=\"highlighter-rouge\">true</code> as without it the questions and responses will be absent with only question and answer IDs present) e.g. to get the first 100 survey responses for survey ID 421142, open the following link in a browser:</p><p><a target=\"_blank\" rel=\"noopener\" href=\"https://api.smartsurvey.io/v1/surveys/421142/responses?api_token=[api_token]&amp;api_token_secret=[api_token_secret]&amp;include_labels=true&amp;page_size=100&amp;page=1\">https://api.smartsurvey.io/v1/surveys/421142/responses?api_token=[api_token]&amp;api_token_secret=[api_token_secret]&amp;include_labels=true&amp;page_size=100&amp;page=1</a></p><h4 id=\"query-smartsurvey-api-with-postman\">Query SmartSurvey API with Postman</h4><ol>  <li>Add URL request in the URL text field with the “action” on the left is set to <code class=\"highlighter-rouge\">GET</code> and press send!</li></ol><style>embed {  border: 1px solid #555;}</style><embed src=\"/assets/images/ss_postman.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /><h4 id=\"smartsurvey-api-basic-authentication\">SmartSurvey API Basic Authentication</h4><p>SmartSurvey supported querystring parameters as exampled above but as of today these are now deprecated and all requests should switch to using Basic Auth. Instead of adding the API Token and Token Secret as parameters in the GET request URL, they take the form of a <code class=\"highlighter-rouge\">username</code> and <code class=\"highlighter-rouge\">password</code> respectively, which are passed to the header instead à la below:</p><p><a target=\"_blank\" rel=\"noopener\" href=\"https://api.smartsurvey.io/v1/surveys/421142/responses?include_labels=true&amp;page_size=100&amp;page=1\">https://api.smartsurvey.io/v1/surveys/421142/responses?include_labels=true&amp;page_size=100&amp;page=1</a></p><h3 id=\"eventbrite-api\">Eventbrite API</h3><p>This is the <a target=\"_blank\" rel=\"noopener\" href=\"eventbrite.com/platform/api\">documentation for the Eventbrite API</a>. Authentication in Eventbrite differs from Smart Survey as it is achieved by sending the authentication keys in the <code class=\"highlighter-rouge\">HEADER</code>, which means we need to use Postman by adding a key-value pair in the “Headers” tab, with:</p><ul>  <li><code class=\"highlighter-rouge\">Key</code> = “Authorization”</li>  <li><code class=\"highlighter-rouge\">Value</code> = “Bearer [private token]”</li></ul><p>Check the documetion on how to retrieve your private token</p><embed src=\"/assets/images/eb_postman.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /><p>N.B Eventbrite handles pagination differently than SmartSurvey. As per above the result starts with a “pagination” object with pages count information and a “continuation” code. To get the next page, send the same request again, but with an extra <code class=\"highlighter-rouge\">“continuation</code> parameter set (in my case <code class=\"highlighter-rouge\">eyJwYWdlIjogMn0</code>).</p><h3 id=\"eventbrite-api-endpoints\">Eventbrite API endpoints</h3><p>There are many endpoints with Eventbrite API. Here are two:</p><p><strong>1. https://www.eventbriteapi.com/v3/organizations/0123456789/events?expand=organizer,venue</strong></p><p>This returns all events that an organisation has ever created (the number 0123456789 for instance would be the organisation ID):</p><p><strong>2. https://www.eventbriteapi.com/v3/organizations/1234561011/events?expand=organizer,venue</strong></p><p>The second enpoint above calls and returns all tickets attached to an event with additional information about attendees - as shown in Postman below:</p><embed src=\"/assets/images/eb2_postman.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /><p>Pagination information shown and then a list of all the orders for that event.</p>",
            "url": "http://localhost:4000/2022/12/01/apis-and-postman",
            
            
            
            "tags": ["API","RESTful","endpoint"],
            
            "date_published": "2022-12-01T00:00:00+00:00",
            "date_modified": "2022-12-01T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2022/11/01/mentoring",
            "title": "Mentoring",
            "summary": null,
            "content_text": "I offer mentoring to civil servants from various departments on the Data Science Accelerator Programme and recently won an award.Should you like to recieve mentoring for your software development and data science projects please get in touch.",
            "content_html": "<p>I offer mentoring to civil servants from various departments on the <a target=\"_blank\" rel=\"noopener\" href=\"https://www.gov.uk/government/publications/data-science-accelerator-programme/introduction-to-the-data-science-accelerator-programme\">Data Science Accelerator Programme</a> and recently won an award.</p><p><img src=\"/assets/images/RRAward.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><style>img {  border: 1px solid #555;}</style><p><img src=\"/assets/images/mentoring.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><p>Should you like to recieve mentoring for your software development and data science projects please get in touch.</p>",
            "url": "http://localhost:4000/2022/11/01/mentoring",
            
            
            
            "tags": ["mentoring","support","software","development","data"],
            
            "date_published": "2022-11-01T00:00:00+00:00",
            "date_modified": "2022-11-01T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2022/06/30/automated-testing",
            "title": "Automated unit testing",
            "summary": null,
            "content_text": "Python unit testing a web application inside of Django.The objective here is to check that the following urls from urls.py return as expected. Django detects tests by looking for classes that also starts with ‘test’, hence the list on the right in the test folder:N.B delete the test.py file Django automatically addsI map all files to be tested to testing files - Django then looks for functions withinth the test classes. Here I am checking to see that my unit test virtual environment works, so I will intentionally fail a unit test:from django.test import TestCasefrom django.urls import reverse, resolve from budget.views import project_list, project_detail, ProjectCreateViewclass TestCheck(TestCase):    def test_the_testsetup(self):        #assert 1 == 2 # returns     assert 1 == 2 AssertionErrorThe self.assertEquals() verifies that the action of the function under test behaves as expected i.e. two arguments passed are equal. I am obtaining these results from my terminal like this:I am setting the URL now equal to the reverse of 'list'  - used to pass the url to the result function to what view Django is going to call.class TestUrls(TestCase):    def list_resolves(self):        url = reverse('list')        print(resolve(url)) #use resolve function to pass the url        \"\"\"        Creating test database for alias 'default'...        System check identified no issues (0 silenced).        ResolverMatch(func=budget.views.project_list, args=(), kwargs={}, url_name=list, app_names=[], namespaces=[])        .        ----------------------------------------------------------------------        Ran 1 test in 0.007s        OK        \"\"\"        self.assertEquals(resolve(url).func, project_list)        \"\"\"        ----------------------------------------------------------------------        Ran 1 test in 0.008s        OK        \"\"\"Next we test the add  url:    def add_resolves(self):        url = reverse('add')        #self.assertEquals(resolve(url).func, ProjectCreateView) # ProjectCreateView is a class based view so throws an error below        \"\"\"        ======================================================================        FAIL: test_list_url_is_resolved (tests.test_urls.TestUrls)        ----------------------------------------------------------------------        Traceback (most recent call last):        File \"F:\\Dominic\\Python\\django-testing-dslove\\django-testing-dslove\\budgetproject\\budget\\tests\\test_urls.py\", line 48, in test_list_url_is_resolved            self.assertEquals(resolve(url).func, ProjectCreateView)        AssertionError: &lt;function ProjectCreateView at 0x0000023CFBE7EDC8&gt; != &lt;class 'budget.views.ProjectCreateView'&gt;        ----------------------------------------------------------------------        Ran 1 test in 0.008s        FAILED (failures=1)        Destroying test database for alias 'default'...This association error is correct since the function of ProjectCreateView is not equal to the class. This is because the view is class based so we can add func.view_class to resolve the error                self.assertEquals(resolve(url).func.view_class, ProjectCreateView)                \"\"\"        ----------------------------------------------------------------------        Ran 1 test in 0.005s        OK        Destroying test database for alias 'default'...        \"\"\"An error that there is no reverse for details without any arguemnts if args is not used to equal some slug  in the following test function because the URL definition above needs one:    def detail_resolves(self):        url = reverse('detail', args=['a-slug']) # args included as url definition uses a slug        self.assertEquals(resolve(url).func, project_detail)                 \"\"\"         ----------------------------------------------------------------------        Ran 1 test in 0.007s        OK        Destroying test database for alias 'default'...        \"\"\"",
            "content_html": "<h1 id=\"python-unit-testing-a-web-application-inside-of-django\">Python unit testing a web application inside of Django.</h1><p>The objective here is to check that the following urls from urls.py return as expected. Django detects tests by looking for classes that also starts with ‘test’, hence the list on the right in the test folder:</p><style>img {  border: 1px solid #555;}</style><p><img src=\"/assets/images/unit_testing.png\" alt=\"Award\" width=\"100%\" height=\"100%\" /></p><p>N.B delete the test.py file Django automatically adds</p><p>I map all files to be tested to testing files - Django then looks for functions withinth the test classes. Here I am checking to see that my unit test virtual environment works, so I will intentionally fail a unit test:</p><div class=\"language-py highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">django.test</span> <span class=\"kn\">import</span> <span class=\"n\">TestCase</span><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span><span class=\"p\">,</span> <span class=\"n\">resolve</span> <span class=\"kn\">from</span> <span class=\"nn\">budget.views</span> <span class=\"kn\">import</span> <span class=\"n\">project_list</span><span class=\"p\">,</span> <span class=\"n\">project_detail</span><span class=\"p\">,</span> <span class=\"n\">ProjectCreateView</span><span class=\"k\">class</span> <span class=\"nc\">TestCheck</span><span class=\"p\">(</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>    <span class=\"k\">def</span> <span class=\"nf\">test_the_testsetup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>        <span class=\"c1\">#assert 1 == 2 # returns     assert 1 == 2 AssertionError</span></code></pre></div></div><p>The <code class=\"highlighter-rouge\">self.assertEquals()</code> verifies that the action of the function under test behaves as expected i.e. two arguments passed are equal. I am obtaining these results from my terminal like this:</p><p><img src=\"/assets/images/unit_testing_terminal.png\" alt=\"Award\" width=\"100%\" height=\"100%\" /></p><p>I am setting the URL now equal to the reverse of <code class=\"highlighter-rouge\">'list'</code>  - used to pass the url to the result function to what view Django is going to call.</p><div class=\"language-py highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">class</span> <span class=\"nc\">TestUrls</span><span class=\"p\">(</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>    <span class=\"k\">def</span> <span class=\"nf\">list_resolves</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s\">'list'</span><span class=\"p\">)</span>        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">))</span> <span class=\"c1\">#use resolve function to pass the url</span>        <span class=\"s\">\"\"\"        Creating test database for alias 'default'...        System check identified no issues (0 silenced).        ResolverMatch(func=budget.views.project_list, args=(), kwargs={}, url_name=list, app_names=[], namespaces=[])        .        ----------------------------------------------------------------------        Ran 1 test in 0.007s        OK        \"\"\"</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEquals</span><span class=\"p\">(</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">project_list</span><span class=\"p\">)</span>        <span class=\"s\">\"\"\"        ----------------------------------------------------------------------        Ran 1 test in 0.008s        OK        \"\"\"</span></code></pre></div></div><p>Next we test the <code class=\"highlighter-rouge\">add</code>  url:</p><div class=\"language-py highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"k\">def</span> <span class=\"nf\">add_resolves</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s\">'add'</span><span class=\"p\">)</span>        <span class=\"c1\">#self.assertEquals(resolve(url).func, ProjectCreateView) # ProjectCreateView is a class based view so throws an error below</span>        <span class=\"s\">\"\"\"        ======================================================================        FAIL: test_list_url_is_resolved (tests.test_urls.TestUrls)        ----------------------------------------------------------------------        Traceback (most recent call last):        File \"F:</span><span class=\"err\">\\</span><span class=\"s\">Dominic</span><span class=\"err\">\\</span><span class=\"s\">Python</span><span class=\"err\">\\</span><span class=\"s\">django-testing-dslove</span><span class=\"err\">\\</span><span class=\"s\">django-testing-dslove</span><span class=\"se\">\\b</span><span class=\"s\">udgetproject</span><span class=\"se\">\\b</span><span class=\"s\">udget</span><span class=\"se\">\\t</span><span class=\"s\">ests</span><span class=\"se\">\\t</span><span class=\"s\">est_urls.py\", line 48, in test_list_url_is_resolved            self.assertEquals(resolve(url).func, ProjectCreateView)        AssertionError: &lt;function ProjectCreateView at 0x0000023CFBE7EDC8&gt; != &lt;class 'budget.views.ProjectCreateView'&gt;        ----------------------------------------------------------------------        Ran 1 test in 0.008s        FAILED (failures=1)        Destroying test database for alias 'default'...</span></code></pre></div></div><p>This association error is correct since the function of ProjectCreateView is not equal to the class. This is because the view is class based so we can add <code class=\"highlighter-rouge\">func.view_class</code> to resolve the error</p><div class=\"language-py highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEquals</span><span class=\"p\">(</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">view_class</span><span class=\"p\">,</span> <span class=\"n\">ProjectCreateView</span><span class=\"p\">)</span>                <span class=\"s\">\"\"\"        ----------------------------------------------------------------------        Ran 1 test in 0.005s        OK        Destroying test database for alias 'default'...        \"\"\"</span></code></pre></div></div><p>An error that there is no reverse for details without any arguemnts if <code class=\"highlighter-rouge\">args</code> is not used to equal some <code class=\"highlighter-rouge\">slug</code>  in the following test function because the URL definition above needs one:</p><div class=\"language-py highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"k\">def</span> <span class=\"nf\">detail_resolves</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s\">'detail'</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s\">'a-slug'</span><span class=\"p\">])</span> <span class=\"c1\"># args included as url definition uses a slug</span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEquals</span><span class=\"p\">(</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">project_detail</span><span class=\"p\">)</span>                 <span class=\"s\">\"\"\"         ----------------------------------------------------------------------        Ran 1 test in 0.007s        OK        Destroying test database for alias 'default'...        \"\"\"</span></code></pre></div></div>",
            "url": "http://localhost:4000/2022/06/30/automated-testing",
            
            
            
            "tags": ["Python","Django","testing"],
            
            "date_published": "2022-06-30T00:00:00+01:00",
            "date_modified": "2022-06-30T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2022/06/13/mdr-celebration",
            "title": "Manorial Documents Register Party",
            "summary": null,
            "content_text": "I lead the data integration developemnt project for the UK online Manorial Documents Register (MDR) application, and attended a private reception at the Royal Courts of Justice to mark its completion today, along with 100 years of the Law of Propety Act 1925.The MDR is an index of English and Welsh manorial records, providing brief descriptions of documents and details of their locations in public and private hands. Here’s a link to the developed register applicationMDR Discovery The National ArchivesHere was my rather big invitation that I recieved from the Master of the RollsArriving at the Painted Room, no sign of Sir Geoffrey Vos and Jeff James…yet.",
            "content_html": "<p>I lead the data integration developemnt project for the UK online Manorial Documents Register (MDR) application, and attended a private reception at the Royal Courts of Justice to mark its completion today, along with 100 years of the Law of Propety Act 1925.</p><p>The MDR is an index of English and Welsh manorial records, providing brief descriptions of documents and details of their locations in public and private hands. Here’s a link to the developed register application<a target=\"_blank\" rel=\"noopener\" href=\"https://discovery.nationalarchives.gov.uk/manor-search\">MDR Discovery The National Archives</a></p><p>Here was my rather big invitation that I recieved from the <a target=\"_blank\" rel=\"noopener\" href=\"https://www.judiciary.uk/about-the-judiciary/who-are-the-judiciary/judges/profile-mor/\">Master of the Rolls</a></p><style>img {  border: 1px solid #555;}</style><p><img src=\"/assets/images/MDR2022.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><p>Arriving at the Painted Room, no sign of Sir Geoffrey Vos and Jeff James…yet.</p><p><img src=\"/assets/images/rcjreception.jpg\" alt=\"RCJreception\" /></p>",
            "url": "http://localhost:4000/2022/06/13/mdr-celebration",
            
            
            
            "tags": ["records","data","legislation","archives"],
            
            "date_published": "2022-06-13T00:00:00+01:00",
            "date_modified": "2022-06-13T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2022/04/01/legal-informatics",
            "title": "Measuring statute complexity",
            "summary": null,
            "content_text": "This is a machine learning study of logical connectives in British legislation to determine statute complexity. Full report is below.",
            "content_html": "<p>This is a machine learning study of logical connectives in British legislation to determine statute complexity. Full report is below.</p><object data=\"/assets/webpages/lcituksb/index.htm\" width=\"1050\" height=\"21880\" type=\"text/html\" />",
            "url": "http://localhost:4000/2022/04/01/legal-informatics",
            
            
            
            "tags": ["text","analytics","machine","learning"],
            
            "date_published": "2022-04-01T00:00:00+01:00",
            "date_modified": "2022-04-01T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2021/12/01/lcituksb-video",
            "title": "Dashboard development",
            "summary": null,
            "content_text": "Logical Connectives in the UK Statute BookA video demonstrating a web application I developed in Python which calculates the complexity of statutes based on logical connective NER inferences.The video starts off with a background presentation followed by a demo of the webapp circa midway, which is where it plays from.    ",
            "content_html": "<h3 id=\"logical-connectives-in-the-uk-statute-book\">Logical Connectives in the UK Statute Book</h3><p>A video demonstrating a web application I developed in Python which calculates the complexity of statutes based on logical connective NER inferences.</p><p>The video starts off with a background presentation followed by a demo of the webapp circa midway, which is where it plays from.</p><video loop=\"true\" muted=\"\" autoplay=\"\" controls=\"\">    <source src=\"/assets/videos/lcituksbvideo.mp4#t=176,410\" type=\"video/mp4\" /></video>",
            "url": "http://localhost:4000/2021/12/01/lcituksb-video",
            
            
            
            "tags": ["Python","webapp","NER","text","analytics"],
            
            "date_published": "2021-12-01T00:00:00+00:00",
            "date_modified": "2021-12-01T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2021/11/12/machine-learning-legislation",
            "title": "Machine learning legislation",
            "summary": null,
            "content_text": "Below I have documented my work training a supervised Named-Entity Recognition custom model with Law of Property Act 1925 text data using a Kaggle Jupyter notebook, developed in Python.    ",
            "content_html": "<p>Below I have documented my work training a supervised Named-Entity Recognition custom model with Law of Property Act 1925 text data using a Kaggle Jupyter notebook, developed in Python.</p><video loop=\"true\" muted=\"\" autoplay=\"\" controls=\"\">    <source src=\"/assets/videos/kagglelcitukb.mp4\" type=\"video/mp4\" /></video><object data=\"/assets/webpages/lcituksb/model.htm\" width=\"1050\" height=\"116120\" type=\"text/html\" />",
            "url": "http://localhost:4000/2021/11/12/machine-learning-legislation",
            
            
            
            "tags": ["NER","machine","learning","data"],
            
            "date_published": "2021-11-12T00:00:00+00:00",
            "date_modified": "2021-11-12T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2021/06/21/aws-toplogy",
            "title": "Amazon Web Services topology",
            "summary": null,
            "content_text": "Use caseI dealt with a client, an SME print company called PrintIT wanting a solution to harness its expansive sales via improved infrastructure and, eventually, geographically with different offices to off-load parts of its workflow.Figure 1 Exisiting physical architectureProposed AWS architectureAdvice given was that PrintIT should replatform as a migration strategy with the possibility for hybrid migration retention on some components like the exchange server. As an SME, PrintIT should be guided by a stepwise framework for migration along the lines of Khan and Al-Yasiri (2015)1, which involves: ‘requirements’ – market study, and a likely choice of IaaS; ‘preparation’ – including a feasibility study, readiness questionnaire, and close looks at risks; and, ‘migration – assessing costs and contracts, testing deployments, and monitoring.Figure 2 VPC topologyConfiguration setupTo provision a new bespoke VPC for our client PrintIT, IAM is required with a root account for business should be set up. A new user ‘principal’ should be created and added to a new group associated with the Administrator Access policy document à la:{    \"Version\": \"2012-10-17\",    \"Statement\": [        {            \"Effect\": \"Allow\",            \"Action\": \"*\",            \"Resource\": \"*\"        }    ]}Mapping the problem domain to AWS offerings was carried out under the Rabetski (2011)1 process.VPCA VPC is a service listed in the AWS Management Console which when selected can be initiated with a setup assistant interface via ‘Launch VPC Wizard’. It will exist alongside the default VPC:Figure 3 Default VPCThe VPC is configured with ‘Public and Private Subnets’ at Step 1 which creates a /16 network with two /24 subnets. The private subnet cannot reach the internet through a NAT and the public subnets access it using elastic IP’s.SubnetsSubnets by way of exmaplt could be AZ us-east-1a and 1b US East (N. Virginia) but in production, PrintIT should likely use local region eu-west2, EU (London) to reduce latency. VPC User Guide (2020) recommends a maximum CIDR block ./16 from private IPv4 meaning 10.0.0.0 - 10.255.255.255 (10/8 prefix) is used: RFC 1918 (Rekhter, et al.)2. The NAT gateway was given a public elastic IP with an ID. Additional public and private subnets are created in AZ ‘b’. Two pairs of private and public subnets provide high availability across multiple AZs promoted by the Reliability Pillar of the AWS Well-Architected Framework (Piper &amp; Clinton, 2019, p. 191)3. As the VPC Wizard creates only one NAT gateway for Public Subnet 1, a second was created.Figure 4 Created subnetsRoutingThe NAT gateways send packets to the internet which requires the private and public subnets to be configured to route internet bound traffic to them using an associated route table.Figure 5 VPC with Public and Private Subnets in Two AZ’sTable 1 Routes for Private and Public Subnets      Subnets    Destination    Target        Public    10.0.0.0/16    Local        Public    0.0.0.0/0    Internet Gateway        Private    10.0.0.0/16    Localy        Private    0.0.0.0/0    NAT Gateway  Security groups, EC2 instances, and RDS DB instancesA ‘security group’ was created to behave as a stateful firewall on the EC2 instances as web servers to regulate port access, IP authorised ranges, inbound, and outbound network traffic. Then a ‘Dedicated’ Windows Server OS was used to launch and eventually host IIS as a web server. Next an AMI was created and stored in the Print IT VPC and the instance is deleted from the public subnet as production will use AMIs in private subnets. For the database, a security group was created to allow packets from the Web Security Group. A database subnet group was configured to instruct the forthcoming RDS what subnets to utilise. A MS SQL database was chosen - data from PrintIT’s Access database can undergo ETL after its instantiation. The option for logging performance information for CloudWatch was selected too. The RDS instance was also replicated for Multi-AZ deployment to be highly available under production loads.Figure 6 Deployed RDSLoad balancing and scalingA load balancer was created to spread traffic across AZs and the EC2 instances that will be launched into private subnets with the database servers, routing requests to targets using HTTP port 80. Next, Auto Scaling, which comprises a Launch Configuration, Auto Scaling group, and non-compulsory scaling policy. AMI Web Server 1 could be used to launch the configuration - the autoscaling group was set to start with two instances in Private Subnet 1 (10.0.1.0/24) and Private Subnet 2 (10.0.3.0/24). As regards scaling policies, for the EC2’s, Print IT may be given a scale between two and six instances with average CPU use at 60.an opportunity also exists to attach EBS root volumes to the Windows ECS instances to store the image files and to take routine snapshots of them as backups. They will be replicated automatically within its AZ for durability ideally as General Purpose SSD and can be provisioned with the following CloudFormation in a comparable manner as in the code belowResources:  [...]  EBSBackupVolumeA:    Type: 'AWS::EC2::Volume'    Properties:      AvailabilityZone: !Select [0, !GetAZs '']      Size: 5      VolumeType: gp2EBSBackupVolumeAttachmentA:  Type: 'AWS::EC2::VolumeAttachment'  Properties:    Device: '/dev/xvdf'    InstanceId: !Ref EC2InstanceA    VolumeId: !Ref EBSBackupVolumeA            Khan and Al-Yasiri, 2015. Framework for cloud computing adoption: A road map for Smes to cloud migration, International Journal on Cloud Computing: Services and Architecture (IJCCSA) Vol. 5, No. 5/6 &#8617; &#8617;2              Rekhter, Y. et al., February 1996. RFC 1918: Address Allocation for Private Internets, s.l.: Network Working Group IETF &#8617;              Piper, B. &amp; Clinton, D., 2019. AWS Certified Solutions Architect Study Guide: Associate SAA-C01 Exam. Second ed. Indianapolis: John Wiley &amp; Sons. &#8617;      ",
            "content_html": "<h3 id=\"use-case\">Use case</h3><p>I dealt with a client, an SME print company called PrintIT wanting a solution to harness its expansive sales via improved infrastructure and, eventually, geographically with different offices to off-load parts of its workflow.<br /><br /></p><embed src=\"/assets/images/exisitingarch.svg\" width=\"50%\" height=\"50%\" style=\"display: block; margin: 0 auto\" /><p><br /></p><center><i>Figure 1 Exisiting physical architecture</i></center><h3 id=\"proposed-aws-architecture\">Proposed AWS architecture</h3><p>Advice given was that PrintIT should replatform as a migration strategy with the possibility for hybrid migration retention on some components like the exchange server. As an SME, PrintIT should be guided by a stepwise framework for migration along the lines of Khan and Al-Yasiri (2015)<sup id=\"fnref:fn1\" role=\"doc-noteref\"><a href=\"#fn:fn1\" class=\"footnote\" rel=\"footnote\">1</a></sup>, which involves: ‘requirements’ – market study, and a likely choice of IaaS; ‘preparation’ – including a feasibility study, readiness questionnaire, and close looks at risks; and, ‘migration – assessing costs and contracts, testing deployments, and monitoring.</p><p><br /></p><embed src=\"/assets/images/propawstopology.svg\" /><p><em>Figure 2 VPC topology</em></p><h3 id=\"configuration-setup\">Configuration setup</h3><p>To provision a new bespoke VPC for our client PrintIT, IAM is required with a root account for business should be set up. A new user ‘principal’ should be created and added to a new group associated with the Administrator Access policy document à la:</p><div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">    </span><span class=\"nl\">\"Version\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2012-10-17\"</span><span class=\"p\">,</span><span class=\"w\">    </span><span class=\"nl\">\"Statement\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">        </span><span class=\"p\">{</span><span class=\"w\">            </span><span class=\"nl\">\"Effect\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span><span class=\"w\">            </span><span class=\"nl\">\"Action\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"*\"</span><span class=\"p\">,</span><span class=\"w\">            </span><span class=\"nl\">\"Resource\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"*\"</span><span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"></span><span class=\"p\">}</span><span class=\"w\"></span></code></pre></div></div><p>Mapping the problem domain to AWS offerings was carried out under the Rabetski (2011)<sup id=\"fnref:fn1:1\" role=\"doc-noteref\"><a href=\"#fn:fn1\" class=\"footnote\" rel=\"footnote\">1</a></sup> process.</p><p><br /></p><h3 id=\"vpc\">VPC</h3><p>A VPC is a service listed in the AWS Management Console which when selected can be initiated with a setup assistant interface via ‘Launch VPC Wizard’. It will exist alongside the default VPC:</p><p><br /><img src=\"/assets/images/defaultvpc.svg\" alt=\"defaultvpc.\" title=\"Defaulat VPC\" /><em>Figure 3 Default VPC</em></p><p>The VPC is configured with ‘Public and Private Subnets’ at Step 1 which creates a /16 network with two /24 subnets. The private subnet cannot reach the internet through a NAT and the public subnets access it using elastic IP’s.</p><p><br /></p><h3 id=\"subnets\">Subnets</h3><p>Subnets by way of exmaplt could be AZ us-east-1a and 1b US East (N. Virginia) but in production, PrintIT should likely use local region eu-west2, EU (London) to reduce latency. VPC User Guide (2020) recommends a maximum CIDR block ./16 from private IPv4 meaning 10.0.0.0 - 10.255.255.255 (10/8 prefix) is used: RFC 1918 (Rekhter, et al.)<sup id=\"fnref:fn3\" role=\"doc-noteref\"><a href=\"#fn:fn3\" class=\"footnote\" rel=\"footnote\">2</a></sup>. The NAT gateway was given a public elastic IP with an ID. Additional public and private subnets are created in AZ ‘b’. Two pairs of private and public subnets provide high availability across multiple AZs promoted by the Reliability Pillar of the AWS Well-Architected Framework (Piper &amp; Clinton, 2019, p. 191)<sup id=\"fnref:fn4\" role=\"doc-noteref\"><a href=\"#fn:fn4\" class=\"footnote\" rel=\"footnote\">3</a></sup>. As the VPC Wizard creates only one NAT gateway for Public Subnet 1, a second was created.</p><p><br /></p><embed src=\"/assets/images/subnets.svg\" /><p><em>Figure 4 Created subnets</em></p><p><br /></p><h3 id=\"routing\">Routing</h3><p>The NAT gateways send packets to the internet which requires the private and public subnets to be configured to route internet bound traffic to them using an associated route table.<br /><br /></p><embed src=\"/assets/images/vpcsubnets.svg\" style=\"display: block; margin: 0 auto\" /><center><i>Figure 5 VPC with Public and Private Subnets in Two AZ’s</i></center><p><em>Table 1 Routes for Private and Public Subnets</em></p><style>table, th, td {  border:1px solid black;  border-collapse: collapse;}</style><table>  <tr>    <th>Subnets</th>    <th>Destination</th>    <th>Target</th>  </tr>  <tr>    <td>Public</td>    <td>10.0.0.0/16</td>    <td>Local</td>  </tr>  <tr>    <td>Public</td>    <td>0.0.0.0/0</td>    <td>Internet Gateway</td>  </tr>  <tr>    <td>Private</td>    <td>10.0.0.0/16</td>    <td>Localy</td>  </tr>  <tr>    <td>Private</td>    <td>0.0.0.0/0</td>    <td>NAT Gateway</td>  </tr></table><p><br /></p><h3 id=\"security-groups-ec2-instances-and-rds-db-instances\">Security groups, EC2 instances, and RDS DB instances</h3><p>A ‘security group’ was created to behave as a stateful firewall on the EC2 instances as web servers to regulate port access, IP authorised ranges, inbound, and outbound network traffic. Then a ‘Dedicated’ Windows Server OS was used to launch and eventually host IIS as a web server. Next an AMI was created and stored in the Print IT VPC and the instance is deleted from the public subnet as production will use AMIs in private subnets. For the database, a security group was created to allow packets from the Web Security Group. A database subnet group was configured to instruct the forthcoming RDS what subnets to utilise. A MS SQL database was chosen - data from PrintIT’s Access database can undergo ETL after its instantiation. The option for logging performance information for CloudWatch was selected too. The RDS instance was also replicated for Multi-AZ deployment to be highly available under production loads.</p><p><br /></p><embed src=\"/assets/images/deployedrds.svg\" width=\"50%\" height=\"50%\" style=\"display: block; margin: 0 auto\" /><center><i>Figure 6 Deployed RDS</i></center><p><br /></p><h3 id=\"load-balancing-and-scaling\">Load balancing and scaling</h3><p>A load balancer was created to spread traffic across AZs and the EC2 instances that will be launched into private subnets with the database servers, routing requests to targets using HTTP port 80. Next, Auto Scaling, which comprises a Launch Configuration, Auto Scaling group, and non-compulsory scaling policy. AMI Web Server 1 could be used to launch the configuration - the autoscaling group was set to start with two instances in Private Subnet 1 (10.0.1.0/24) and Private Subnet 2 (10.0.3.0/24). As regards scaling policies, for the EC2’s, Print IT may be given a scale between two and six instances with average CPU use at 60.</p><p>an opportunity also exists to attach EBS root volumes to the Windows ECS instances to store the image files and to take routine snapshots of them as backups. They will be replicated automatically within its AZ for durability ideally as General Purpose SSD and can be provisioned with the following CloudFormation in a comparable manner as in the code below</p><div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">Resources</span><span class=\"pi\">:</span>  <span class=\"pi\">[</span><span class=\"nv\">...</span><span class=\"pi\">]</span>  <span class=\"na\">EBSBackupVolumeA</span><span class=\"pi\">:</span>    <span class=\"na\">Type</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">AWS::EC2::Volume'</span>    <span class=\"na\">Properties</span><span class=\"pi\">:</span>      <span class=\"na\">AvailabilityZone</span><span class=\"pi\">:</span> <span class=\"kt\">!Select</span> <span class=\"pi\">[</span><span class=\"nv\">0</span><span class=\"pi\">,</span> <span class=\"kt\">!GetAZs</span> <span class=\"s1\">'</span><span class=\"s\">'</span><span class=\"pi\">]</span>      <span class=\"na\">Size</span><span class=\"pi\">:</span> <span class=\"m\">5</span>      <span class=\"na\">VolumeType</span><span class=\"pi\">:</span> <span class=\"s\">gp2</span><span class=\"na\">EBSBackupVolumeAttachmentA</span><span class=\"pi\">:</span>  <span class=\"na\">Type</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">AWS::EC2::VolumeAttachment'</span>  <span class=\"na\">Properties</span><span class=\"pi\">:</span>    <span class=\"na\">Device</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">/dev/xvdf'</span>    <span class=\"na\">InstanceId</span><span class=\"pi\">:</span> <span class=\"kt\">!Ref</span> <span class=\"s\">EC2InstanceA</span>    <span class=\"na\">VolumeId</span><span class=\"pi\">:</span> <span class=\"kt\">!Ref</span> <span class=\"s\">EBSBackupVolumeA</span></code></pre></div></div><div class=\"footnotes\" role=\"doc-endnotes\">  <ol>    <li id=\"fn:fn1\" role=\"doc-endnote\">      <p>Khan and Al-Yasiri, 2015. Framework for cloud computing adoption: A road map for Smes to cloud migration, International Journal on Cloud Computing: Services and Architecture (IJCCSA) Vol. 5, No. 5/6 <a href=\"#fnref:fn1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a> <a href=\"#fnref:fn1:1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;<sup>2</sup></a></p>    </li>    <li id=\"fn:fn3\" role=\"doc-endnote\">      <p>Rekhter, Y. et al., February 1996. RFC 1918: Address Allocation for Private Internets, s.l.: Network Working Group IETF <a href=\"#fnref:fn3\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn4\" role=\"doc-endnote\">      <p>Piper, B. &amp; Clinton, D., 2019. AWS Certified Solutions Architect Study Guide: Associate SAA-C01 Exam. Second ed. Indianapolis: John Wiley &amp; Sons. <a href=\"#fnref:fn4\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>  </ol></div>",
            "url": "http://localhost:4000/2021/06/21/aws-toplogy",
            
            
            
            "tags": ["AWS","vpc","subnet"],
            
            "date_published": "2021-06-21T00:00:00+01:00",
            "date_modified": "2021-06-21T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2021/05/16/notes-on-mvc",
            "title": "MVC notes",
            "summary": null,
            "content_text": "The Model-View-Controller (MVC) is a well known software pattern - I have drawn the activity of how it works in an ASP.NET Framework context below:Figure 1 ASP.NET MVC Pipeline Request Lifecycle - adapted from Simple Talk (2011)MVC can be acheived with ASP.NET Core to partition the required layers (Troelsen &amp; Japikse, 2020)1. The MVC handles the bidirectional communications with a user of a graphical interface via a ‘controller’. The controller is a broker in the business layer to handle input for a ‘model’ at the data layer behaving as the state for a rendered ‘view’ at the presentation layer (Parson, 2020). Because an MVC derives from O-O programming (Thakur &amp; Pandey, 2019)2, it also made a suitable ASP.NET Core architecture for object creation, following Figure 2.Figure 2 Layered and tiered MVC architecture - adapted from Dissanayake &amp; Dias (2017) and Liu &amp; Gupta (2019)34This model was a real product I developed for an online hardware shop, note that tiers are not synonymous with layers. They are both architectures typically divided thrice, but the former relates to the physical deployment and the latter to the repository structure (Esposito &amp; Saltarello, 2014)5. MVC initiation can be found in the startup.cs public class method services.AddControllersWithViews();. This brings into effect the layers: Controllers, View, ViewModels, and Models. The decision to have a viewmodel was created as a way to contain listed transitory categorised hardware data that could be constructed in a HardwareController first and then passed to the HardwareListViewModel at the presentation layer:namespace MVC_DL.ViewModels{    public class HardwareListViewModel    {        public IEnumerable&lt;Hardware&gt; Hardwares { get; set; }        public string CurrentCategory { get; set; }    }}This is an architecture often associated with Model-View-ViewModel scaffolding where ViewModel represents the View state with changeable data (Kouraklis, 2016)6.            Troelsen, A. &amp; Japikse, P., 2020. MVC Applications with ASP.NET Core. In: Pro C# 8 with .NET Core 3. Berkeley, CA:Apress. &#8617;              Thakur, R. N. &amp; Pandey, U. S., 2019. The Role of Model-View Controller in Object Oriented Software Development.. Nepal Journal of Multidisciplinary Research, 2(2), pp. 1-6. &#8617;              Dissanayake, N. R. &amp; Dias, G. . K. A., 2017. Balanced Abstract Web-MVC Style: An Abstract MVC Implementation for Web-based Applications. GSTF Journal on Computing (JoC), 5(3), pp. 27-41. &#8617;              Liu, Z. &amp; Gupta, B., 2019. Study of Secured Full-Stack Web Development. Honolulu, Hawaii, USA, Proceedings of 34th International Conference on Computers and Their Applications, p. 317–324. &#8617;              Esposito, D. &amp; Saltarello, A., 2014. Microsoft .NET - Architecting Applications for the Enterprise. Second ed. Redmond, Washington: Microsoft Press. &#8617;              Kouraklis, J., 2016. MVVM in Delphi: Architecting and Building Model View ViewModel Applications. London, United Kingdom: Apress. &#8617;      ",
            "content_html": "<p>The Model-View-Controller (MVC) is a well known software pattern - I have drawn the activity of how it works in an ASP.NET Framework context below:</p><embed src=\"/assets/images/mvcpipeline.svg\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /><center><i>Figure 1 ASP.NET MVC Pipeline Request Lifecycle - adapted from Simple Talk (2011)</i></center><p>MVC can be acheived with ASP.NET Core to partition the required layers (Troelsen &amp; Japikse, 2020)<sup id=\"fnref:fn1\" role=\"doc-noteref\"><a href=\"#fn:fn1\" class=\"footnote\" rel=\"footnote\">1</a></sup>. The MVC handles the bidirectional communications with a user of a graphical interface via a ‘controller’. The controller is a broker in the business layer to handle input for a ‘model’ at the data layer behaving as the state for a rendered ‘view’ at the presentation layer (Parson, 2020). Because an MVC derives from O-O programming (Thakur &amp; Pandey, 2019)<sup id=\"fnref:fn2\" role=\"doc-noteref\"><a href=\"#fn:fn2\" class=\"footnote\" rel=\"footnote\">2</a></sup>, it also made a suitable ASP.NET Core architecture for object creation, following Figure 2.</p><p><br /></p><embed src=\"/assets/images/layeredmvc.svg\" width=\"60%\" height=\"60%\" style=\"display: block; margin: 0 auto\" /><p><em>Figure 2 Layered and tiered MVC architecture - adapted from Dissanayake &amp; Dias (2017) and Liu &amp; Gupta (2019)<sup id=\"fnref:fn3\" role=\"doc-noteref\"><a href=\"#fn:fn3\" class=\"footnote\" rel=\"footnote\">3</a></sup><sup id=\"fnref:fn4\" role=\"doc-noteref\"><a href=\"#fn:fn4\" class=\"footnote\" rel=\"footnote\">4</a></sup></em></p><p><br /></p><p>This model was a real product I developed for an online hardware shop, note that tiers are not synonymous with layers. They are both architectures typically divided thrice, but the former relates to the physical deployment and the latter to the repository structure (Esposito &amp; Saltarello, 2014)<sup id=\"fnref:fn5\" role=\"doc-noteref\"><a href=\"#fn:fn5\" class=\"footnote\" rel=\"footnote\">5</a></sup>. MVC initiation can be found in the <code class=\"highlighter-rouge\">startup.cs</code> public class method <code class=\"highlighter-rouge\">services.AddControllersWithViews();</code>. This brings into effect the layers: <code class=\"highlighter-rouge\">Controllers</code>, <code class=\"highlighter-rouge\">View</code>, <code class=\"highlighter-rouge\">ViewModels</code>, and <code class=\"highlighter-rouge\">Models</code>. The decision to have a viewmodel was created as a way to contain listed transitory categorised hardware data that could be constructed in a <code class=\"highlighter-rouge\">HardwareController</code> first and then passed to the <code class=\"highlighter-rouge\">HardwareListViewModel</code> at the presentation layer:</p><div class=\"language-c# highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">namespace</span> <span class=\"nn\">MVC_DL.ViewModels</span><span class=\"p\">{</span>    <span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">HardwareListViewModel</span>    <span class=\"p\">{</span>        <span class=\"k\">public</span> <span class=\"n\">IEnumerable</span><span class=\"p\">&lt;</span><span class=\"n\">Hardware</span><span class=\"p\">&gt;</span> <span class=\"n\">Hardwares</span> <span class=\"p\">{</span> <span class=\"k\">get</span><span class=\"p\">;</span> <span class=\"k\">set</span><span class=\"p\">;</span> <span class=\"p\">}</span>        <span class=\"k\">public</span> <span class=\"kt\">string</span> <span class=\"n\">CurrentCategory</span> <span class=\"p\">{</span> <span class=\"k\">get</span><span class=\"p\">;</span> <span class=\"k\">set</span><span class=\"p\">;</span> <span class=\"p\">}</span>    <span class=\"p\">}</span><span class=\"p\">}</span></code></pre></div></div><p>This is an architecture often associated with Model-View-ViewModel scaffolding where <code class=\"highlighter-rouge\">ViewModel</code> represents the <code class=\"highlighter-rouge\">View</code> state with changeable data (Kouraklis, 2016)<sup id=\"fnref:fn6\" role=\"doc-noteref\"><a href=\"#fn:fn6\" class=\"footnote\" rel=\"footnote\">6</a></sup>.</p><div class=\"footnotes\" role=\"doc-endnotes\">  <ol>    <li id=\"fn:fn1\" role=\"doc-endnote\">      <p>Troelsen, A. &amp; Japikse, P., 2020. MVC Applications with ASP.NET Core. In: Pro C# 8 with .NET Core 3. Berkeley, CA:Apress. <a href=\"#fnref:fn1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn2\" role=\"doc-endnote\">      <p>Thakur, R. N. &amp; Pandey, U. S., 2019. The Role of Model-View Controller in Object Oriented Software Development.. Nepal Journal of Multidisciplinary Research, 2(2), pp. 1-6. <a href=\"#fnref:fn2\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn3\" role=\"doc-endnote\">      <p>Dissanayake, N. R. &amp; Dias, G. . K. A., 2017. Balanced Abstract Web-MVC Style: An Abstract MVC Implementation for Web-based Applications. GSTF Journal on Computing (JoC), 5(3), pp. 27-41. <a href=\"#fnref:fn3\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn4\" role=\"doc-endnote\">      <p>Liu, Z. &amp; Gupta, B., 2019. Study of Secured Full-Stack Web Development. Honolulu, Hawaii, USA, Proceedings of 34th International Conference on Computers and Their Applications, p. 317–324. <a href=\"#fnref:fn4\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn5\" role=\"doc-endnote\">      <p>Esposito, D. &amp; Saltarello, A., 2014. Microsoft .NET - Architecting Applications for the Enterprise. Second ed. Redmond, Washington: Microsoft Press. <a href=\"#fnref:fn5\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn6\" role=\"doc-endnote\">      <p>Kouraklis, J., 2016. MVVM in Delphi: Architecting and Building Model View ViewModel Applications. London, United Kingdom: Apress. <a href=\"#fnref:fn6\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>  </ol></div>",
            "url": "http://localhost:4000/2021/05/16/notes-on-mvc",
            
            
            
            "tags": ["patterns","application","layers"],
            
            "date_published": "2021-05-16T00:00:00+01:00",
            "date_modified": "2021-05-16T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2021/01/01/ecommerce",
            "title": "eCommerce development",
            "summary": null,
            "content_text": "Pre-alpha ecommerce systemI was commissioned to develop this ecommerce system for a second-hand hardware store, in C# with ASP.Core MVC - here is a video    ",
            "content_html": "<h3 id=\"pre-alpha-ecommerce-system\">Pre-alpha ecommerce system</h3><p>I was commissioned to develop this ecommerce system for a second-hand hardware store, in C# with ASP.Core MVC - here is a video</p><video loop=\"true\" muted=\"\" autoplay=\"\" controls=\"\">    <source src=\"/assets/videos/hardwarehub.mp4\" type=\"video/mp4\" /></video>",
            "url": "http://localhost:4000/2021/01/01/ecommerce",
            
            
            
            "tags": ["ecommerce","c#","mvc","entity","framework"],
            
            "date_published": "2021-01-01T00:00:00+00:00",
            "date_modified": "2021-01-01T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2020/09/30/oo-class-modelling",
            "title": "O-O class modeling",
            "summary": null,
            "content_text": "This blog shows how a new dental system was developed for a small dental practice using O-O class modelling architecture.There is a Root_administrator with different functions from a General_administrator. It may be assumed that the remaining staff classes can also follow suit to fulfil inheritance from an intermediary General_administrator class. Studying the problem statment yields core entities:Figure 1 Initial classes acertained from problem statementThe classes are arranged in the manner of class inheritance e.g.class Person {  // methods and fields}// extends keyword for inheritanceclass Subcontractor extends Person  {  // methods and fields of Person   // methods and fields of Subcontractor}Figure 2 Preliminary class structureThe Subcontractor class has an opposite discriminator set. A subclass of Subcontractorclass cannot be a combined instance of another subclass, but could be extended – that is, other types of Subcontractor ‘S’ may be stored in the database.Figure 3 Formal inheritance - SMethods and fields are added to the preliminary class structure via associations (including aggregration and qualifiers - figure 4,  and a final draft class structure is built - figure 5:Figure 4 Class association User – spT_CaseFigure 5 First draft class diagram",
            "content_html": "<p>This blog shows how a new dental system was developed for a small dental practice using O-O class modelling architecture.</p><p>There is a <span style=\"font-family:Arial\">Root_administrator</span> with different functions from a <span style=\"font-family:Arial\">General_administrator</span>. It may be assumed that the remaining staff classes can also follow suit to fulfil inheritance from an intermediary General_administrator class. Studying the problem statment yields core entities:</p><p><br /></p><!--<embed src=\"/assets/images/emptyclasses.svg\">--><p><img src=\"/assets/images/emptyclasses.svg\" alt=\"initclass\" title=\"Initial Classes\" /><!--<img src=\"/assets/images/emptyclasses.svg\">--></p><p><em>Figure 1 Initial classes acertained from problem statement</em></p><p>The classes are arranged in the manner of class inheritance e.g.</p><div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">Person</span> <span class=\"o\">{</span>  <span class=\"c1\">// methods and fields</span><span class=\"o\">}</span><span class=\"c1\">// extends keyword for inheritance</span><span class=\"kd\">class</span> <span class=\"nc\">Subcontractor</span> <span class=\"kd\">extends</span> <span class=\"nc\">Person</span>  <span class=\"o\">{</span>  <span class=\"c1\">// methods and fields of Person </span>  <span class=\"c1\">// methods and fields of Subcontractor</span><span class=\"o\">}</span></code></pre></div></div><p><br /><img src=\"/assets/images/preinheritance.svg\" alt=\"preinherit\" title=\"Pre-inheritance\" /><br /><em>Figure 2 Preliminary class structure</em></p><p>The <span style=\"font-family:Arial\">Subcontractor</span> class has an opposite discriminator set. A subclass of <span style=\"font-family:Arial\">Subcontractor</span>class cannot be a combined instance of another subclass, but could be extended – that is, other types of Subcontractor ‘S’ may be stored in the database.</p><p><br /><img src=\"/assets/images/inheritance.svg\" alt=\"inherit\" title=\"inheritance\" /><br /><em>Figure 3 Formal inheritance - S</em><br /></p><p>Methods and fields are added to the preliminary class structure via associations (including aggregration and qualifiers - figure 4,  and a final draft class structure is built - figure 5:</p><p><br /><img src=\"/assets/images/association.svg\" alt=\"ass\" title=\"Association\" /><br /><em>Figure 4 Class association User – spT_Case</em></p><p><br /></p><embed src=\"/assets/images/classdiagram.svg\" /><p><em>Figure 5 First draft class diagram</em><br /></p>",
            "url": "http://localhost:4000/2020/09/30/oo-class-modelling",
            
            
            
            
            
            "date_published": "2020-09-30T00:00:00+01:00",
            "date_modified": "2020-09-30T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2020/08/31/key-constraints",
            "title": "Key constraints",
            "summary": null,
            "content_text": "I wrote this section of a report that provides a mathematical approach to constraining keys in a relational database.",
            "content_html": "<p>I wrote this section of a report that provides a mathematical approach to constraining keys in a relational database.</p><object data=\"/assets/webpages/keyconstraints/keyconstraints.htm\" width=\"1050\" height=\"1900\" type=\"text/html\" />",
            "url": "http://localhost:4000/2020/08/31/key-constraints",
            
            
            
            "tags": ["maths","databases","functions"],
            
            "date_published": "2020-08-31T00:00:00+01:00",
            "date_modified": "2020-08-31T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2020/08/29/class-associations",
            "title": "Class associations",
            "summary": null,
            "content_text": "Where there is a persistent non-hierarchal relation between at least two classifiers, and their instantiated links have common semantics and structures, an ‘association’ is formed. This means that an association is both conceptually and physically disposed, for if class C1 has a binary association A with class C2, a given object of the former will be related to the latter.Figure 1 Class binary associationClinical_Director – PatientOperation getReport() is defined in the Patient class preliminary diagram in my earlier blog. This refers to a named method that vests object behaviour bound by a ‘contract or obligation’ of the Patient classifier to disclose records. In other words, a Patient object has responsibility to give information about itself at the call of knowing objects, so class methods and attribute visibilities are set to public. This is ‘need to know’ management information for a Clinical_Director object related to an arity m of one:many Patient objects.Figure 2 Object diagramA collection class should be used to gather the instances of Patient objects with each having a reference kept in a vector implementing Java library java.util Figure 3 Class binary associationOrthodontist – Dental assistantA use case with a precondition ‘A Dentist must write their instructions in the Patient referral case.’ sets us on course to finding an association between Orthodontist and Dental_Assistant. A dentist may devolve this precondition to dental assistants who would locate the appropriate Orthodontist to write an instruction email. An Orthodontist object, from a collection, returns details of the chosen practitioner to outsource. Physically, this association is ‘bi-directional’ with multiplicity [1..*] at either end.Figure 3 Object diagram – Bi-directional links in varying notationFigure 4 Plausible association Dental_Assistant – OrthodontistThe association diagram in Figure 4 is missing intermediary elements. This is because use case 1.3 states that it is a Root_administrator object that sends, but not writes, a commissioning email to an Orthodontist. It also confirms that this communication is associated with a ‘referral queue hub’ to which cases are sent. The sequence between each class can be summarised in an n-array association.Figure 5 Plausible n-array association",
            "content_html": "<p>Where there is a persistent non-hierarchal relation between at least two classifiers, and their instantiated links have common semantics and structures, an ‘association’ is formed. This means that an association is both conceptually and physically disposed, for if class <em>C</em><sub>1</sub> has a binary association <em>A</em> with class <em>C</em><sub>2</sub>, a given object of the former will be related to the latter.<br /><br /><br /></p><embed src=\"/assets/images/classbinary.svg\" /><p><em>Figure 1 Class binary association</em></p><p><br /><br /></p><h3 id=\"clinical_director--patient\">Clinical_Director – Patient</h3><p>Operation <span style=\"font-family:Consolas; color:green;\">getReport()</span> is defined in the <span style=\"font-family:Arial;\">Patient</span> class preliminary diagram in my earlier blog. This refers to a named method that vests object behaviour bound by a ‘contract or obligation’ of the Patient classifier to disclose records. In other words, a <span style=\"font-family:Arial;\">Patient</span> object has responsibility to give information about itself at the call of knowing objects, so class methods and attribute visibilities are set to public. This is ‘need to know’ management information for a <span style=\"font-family:Arial;\">Clinical_Director</span> object related to an arity <strong>m</strong> of one:many <span style=\"font-family:Arial;\">Patient</span> objects.</p><p><br /><br /></p><embed src=\"/assets/images/objectdiagram.svg\" /><p><em>Figure 2 Object diagram</em></p><p>A collection class should be used to gather the instances of <span style=\"font-family:Arial;\">Patient</span> objects with each having a reference kept in a vector implementing Java library <span style=\"font-family:Consolas; color:green;\">java.util</span> <br /><br /></p><embed src=\"/assets/images/assovector.svg\" /><p><em>Figure 3 Class binary association</em></p><p><br /></p><h3 id=\"orthodontist--dental-assistant\">Orthodontist – Dental assistant</h3><p>A use case with a precondition ‘A Dentist must write their instructions in the Patient referral case.’ sets us on course to finding an association between <span style=\"font-family:Arial;\">Orthodontist</span> and <span style=\"font-family:Arial;\">Dental_Assistant</span>. A dentist may devolve this precondition to dental assistants who would locate the appropriate Orthodontist to write an instruction email. An <span style=\"font-family:Arial;\">Orthodontist</span> object, from a collection, returns details of the chosen practitioner to outsource. Physically, this association is ‘bi-directional’ with multiplicity <span style=\"font-family:Arial;\">[1..*]</span> at either end.<br /><br /></p><embed src=\"/assets/images/biobject.svg\" /><p><em>Figure 3 Object diagram – Bi-directional links in varying notation</em><br /><br /><br /><br /></p><embed src=\"/assets/images/plauassociation.svg\" /><p><em>Figure 4 Plausible association Dental_Assistant – Orthodontist</em></p><p>The association diagram in Figure 4 is missing intermediary elements. This is because use case 1.3 states that it is a <span style=\"font-family:Arial;\">Root_administrator</span> object that sends, but not writes, a commissioning email to an Orthodontist. It also confirms that this communication is associated with a ‘referral queue hub’ to which cases are sent. The sequence between each class can be summarised in an n-array association.<br /><br /></p><embed src=\"/assets/images/n-array.svg\" /><p><em>Figure 5 Plausible n-array association</em></p>",
            "url": "http://localhost:4000/2020/08/29/class-associations",
            
            
            
            "tags": ["class","object"],
            
            "date_published": "2020-08-29T00:00:00+01:00",
            "date_modified": "2020-08-29T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2020/08/11/counting-multiplying",
            "title": "Counting and multiplying",
            "summary": null,
            "content_text": "How does one count? It interests me that something seemingly so simple as counting, which we do by rote memorary, really demands some thinking about to understand how it works just so it can run on a computer. But I have this - remembering the four properties of an algorithm i.e.  Unique initialisation  Unique succession  Finiteness  Solutionhere is how to count in pseudocode!Now, supringsly, I find it easier and shorter to write an algorithm for multiplication. Bearing in mind, computers pretend to multiply by still adding numbers, but just in loops à la below.Here is a trace of the TIMES alogrithm of the values prod and u everytime it enters the repeat…endrepeat construct:            prod      0      13      26      39      52      65              u      0      1      2      3      4      5      The notion here is that the algorithm multiplies x = 5 by y =13.",
            "content_html": "<p>How does one count? It interests me that something seemingly so simple as counting, which we do by rote memorary, really demands some thinking about to understand how it works just so it can run on a computer. But I have this - remembering the four properties of an algorithm i.e.</p><ol>  <li><em>Unique initialisation</em></li>  <li><em>Unique succession</em></li>  <li><em>Finiteness</em></li>  <li><em>Solution</em></li></ol><p>here is how to count in pseudocode!<br /><br /></p><embed src=\"/assets/images/count.svg\" width=\"70%\" height=\"70%\" /><p><br />Now, supringsly, I find it easier and shorter to write an algorithm for multiplication. Bearing in mind, computers pretend to multiply by still adding numbers, but just in loops à la below.<br /><br /></p><embed src=\"/assets/images/times.svg\" width=\"70%\" height=\"70%\" /><p><br /><br />Here is a trace of the TIMES alogrithm of the values <em>prod</em> and <em>u</em> everytime it enters the <strong><em>repeat…endrepeat</em></strong> construct:</p><table>  <tbody>    <tr>      <td><em>prod</em></td>      <td>0</td>      <td>13</td>      <td>26</td>      <td>39</td>      <td>52</td>      <td>65</td>    </tr>    <tr>      <td><em>u</em></td>      <td>0</td>      <td>1</td>      <td>2</td>      <td>3</td>      <td>4</td>      <td>5</td>    </tr>  </tbody></table><p>The notion here is that the algorithm multiplies x = 5 by y =13.</p>",
            "url": "http://localhost:4000/2020/08/11/counting-multiplying",
            
            
            
            "tags": ["pseudocode","algorithms","maths"],
            
            "date_published": "2020-08-11T00:00:00+01:00",
            "date_modified": "2020-08-11T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2020/05/25/security-policy",
            "title": "Cyber security policy",
            "summary": null,
            "content_text": "Research into what cyber security policies are, what challenges they pose to business, and the legal enforcement challenges they bring",
            "content_html": "<p>Research into what cyber security policies are, what challenges they pose to business, and the legal enforcement challenges they bring</p><object data=\"/assets/webpages/cyberops/Cyber_Operations_Part_A.htm\" width=\"1050\" height=\"11700\" type=\"text/html\" />",
            "url": "http://localhost:4000/2020/05/25/security-policy",
            
            
            
            "tags": ["security","policy","cyber","legal"],
            
            "date_published": "2020-05-25T00:00:00+01:00",
            "date_modified": "2020-05-25T00:00:00+01:00",
            
                "author": "D.S.Love"
            
        },
    
        {
            "id": "http://localhost:4000/2020/04/14/xml-xslt",
            "title": "Building XML and XSLT",
            "summary": null,
            "content_text": "Using XSLT to tranform XML to XHMT.Process overviewForming the XMLWhen an XML document complies with the rules of its syntactical structure it is said to be ‘well-formed’, according to the WS3. The XML document I form comes with a specification to implement.I create database schema in SQL for a library called Porterhouse, starting with a single book table with test data.## TABLE STRUCTURE FOR: Book#DROP TABLE IF EXISTS `Book`;CREATE TABLE `Book` (`ISBN` varchar(17) COLLATE utf8_unicode_ci NOT NULL,`Title` varchar(100) COLLATE utf8_unicode_ci NOT NULL,`AvgLoan_4y` int(11) NOT NULL,`AvgRequest_4y` int(11) NOT NULL,`AuthorFName` varchar(50) COLLATE utf8_unicode_ci NOT NULL,`AuthorSName` varchar(50) COLLATE utf8_unicode_ci NOT NULL,`Publisher_Name` varchar(100) COLLATE utf8_unicode_ci NOT NULL,`Publishing_Date` date NOT NULL,`Edition` int(11) NOT NULL,`Volumes` int(11) NOT NULL,`PAddressline1` varchar(100) COLLATE utf8_unicode_ci NOT NULL,`PAddressline2` varchar(100) COLLATE utf8_unicode_ci NOT NULL,`PAddresscode` varchar(10) COLLATE utf8_unicode_ci NOT NULL,`ContactTelephone` varchar(12) COLLATE utf8_unicode_ci NOT NULL,PRIMARY KEY (`ISBN`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;INSERT INTO `Book` (`ISBN`, `Title`, `AvgLoan_4y`, `AvgRequest_4y`, `AuthorFName`,`AuthorSName`, `Publisher_Name`, `Publishing_Date`, `Edition`, `Volumes`,`PAddressline1`, `PAddressline2`, `PAddresscode`, `ContactTelephone`) VALUES('978-2-8691-4951-9', 'Deleniti', 20, 12, 'Reyna', 'Bailey', 'Larson-Schultz','1985-08-08', 3, 9, '29348 Walsh View Suite 364', 'Koelpinbury', '54944-8088','09999508834');INSERT INTO `Book` (`ISBN`, `Title`, `AvgLoan_4y`, `AvgRequest_4y`, `AuthorFName`,`AuthorSName`, `Publisher_Name`, `Publishing_Date`, `Edition`, `Volumes`,`PAddressline1`, `PAddressline2`, `PAddresscode`, `ContactTelephone`) VALUES('978-2-5076-0558-2', 'Est', 18, 10, 'Ramona', 'Williamson', 'Jast-Simonis','1984-04-03', 2, 4, '092 Keebler Freeway', 'Alanischester', '32519-2138', '649-867-3233');INSERT INTO `Book` (`ISBN`, `Title`, `AvgLoan_4y`, `AvgRequest_4y`, `AuthorFName`,`AuthorSName`, `Publisher_Name`, `Publishing_Date`, `Edition`, `Volumes`,49`PAddressline1`, `PAddressline2`, `PAddresscode`, `ContactTelephone`) VALUES('978-1-5357-4263-4', 'Velit', 6, 2, 'Pablo', 'Leuschke', 'Sipes and Sons', '1979-10-02', 4, 6, '899 Daugherty Brooks', 'Stellastad', '27145', '(604)992-042');I feed this data to an online XML converter where I can rename the output root and child elements of the document to PorterhouseLibrary and Book respectively. The foregoing code shows a well-formed XML document with comments against the five conforming areas: A root element, closing tags, elements properly nested, case matched, and values.&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;!-- 5 value \"\" quoted --&gt;&lt;PorterhouseLibrary&gt;&lt;!-- 1 Root element--&gt;     &lt;Book&gt;&lt;!-- 3 nested--&gt;\t &lt;ISBN&gt; 978-2-8691-4951-9&lt;/ISBN&gt;\t &lt;Title&gt;Deleniti&lt;/Title&gt;\t &lt;AvgLoan_4y&gt;20&lt;/AvgLoan_4y&gt;\t &lt;AvgRequest_4y&gt;12&lt;/AvgRequest_4y&gt;\t &lt;AuthorFName&gt;Reyna&lt;/AuthorFName&gt;\t &lt;AuthorSName&gt;Bailey&lt;/AuthorSName&gt;\t &lt;Publisher_Name&gt;Larson-Schultz&lt;/Publisher_Name&gt;\t &lt;Publishing_Date&gt;1985-08-08&lt;/Publishing_Date&gt;\t &lt;Edition&gt;3&lt;/Edition&gt;\t &lt;Volumes&gt;9&lt;/Volumes&gt;\t &lt;PAddressline1&gt;29348 Walsh View Suite 364&lt;/PAddressline1&gt;\t &lt;PAddressline2&gt;Koelpinbury&lt;/PAddressline2&gt;\t &lt;PAddresscode&gt;54944-8088&lt;/PAddresscode&gt;\t &lt;ContactTelephone&gt;09999508834&lt;/ContactTelephone&gt;    &lt;/Book&gt;&lt;!-- 2 closing tag--&gt;    &lt;Book&gt;         &lt;ISBN&gt; 978-2-5076-0558-2&lt;/ISBN&gt;         &lt;Title&gt;Est&lt;/Title&gt;         &lt;AvgLoan_4y&gt;18&lt;/AvgLoan_4y&gt;         &lt;AvgRequest_4y&gt;10&lt;/AvgRequest_4y&gt;         &lt;AuthorFName&gt;Ramona&lt;/AuthorFName&gt;         &lt;AuthorSName&gt;Williamson&lt;/AuthorSName&gt;         &lt;Publisher_Name&gt;Jast-Simonis&lt;/Publisher_Name&gt;         &lt;Publishing_Date&gt;1984-04-03&lt;/Publishing_Date&gt;\t &lt;Edition&gt;2&lt;/Edition&gt;\t &lt;Volumes&gt;4&lt;/Volumes&gt;\t &lt;PAddressline1&gt;092 Keebler Freeway&lt;/PAddressline1&gt;\t &lt;PAddressline2&gt;Alanischester&lt;/PAddressline2&gt;\t &lt;PAddresscode&gt;32519-2138&lt;/PAddresscode&gt;\t &lt;ContactTelephone&gt;649-867-3233&lt;/ContactTelephone&gt;     &lt;/Book&gt;&lt;!-- 4 Case sensitive, always B for Book --&gt;     &lt;Book&gt;         &lt;ISBN&gt; 978-1-5357-4263-4&lt;/ISBN&gt;         &lt;Title&gt;Velit&lt;/Title&gt;         &lt;AvgLoan_4y&gt;6&lt;/AvgLoan_4y&gt;         &lt;AvgRequest_4y&gt;2&lt;/AvgRequest_4y&gt;         &lt;AuthorFName&gt;Pablo&lt;/AuthorFName&gt;         &lt;AuthorSName&gt;Leuschke&lt;/AuthorSName&gt;         &lt;Publisher_Name&gt;Sipes and Sons&lt;/Publisher_Name&gt;         &lt;Publishing_Date&gt;1979-10-02&lt;/Publishing_Date&gt;         &lt;Edition&gt;4&lt;/Edition&gt;         &lt;Volumes&gt;6&lt;/Volumes&gt;         &lt;PAddressline1&gt;899 Daugherty Brooks&lt;/PAddressline1&gt;         &lt;PAddressline2&gt;Stellastad&lt;/PAddressline2&gt;         &lt;PAddresscode&gt;27145&lt;/PAddresscode&gt;         &lt;ContactTelephone&gt;(604)992-042&lt;/ContactTelephone&gt;     &lt;/Book&gt;&lt;/PorterhouseLibrary&gt;Validating an XML documentValidating an XML document is crucial for Porterhouse Library’s database being defined according to XML schema, wherein constraints on information storage and data types apply to avoid anomalous runtime. To make my XML schema valid, the crux of it should have elements defined as either a simple type (text only) or complex type (attributes and/or child elements).&lt;!--this is simple type--&gt;&lt;element name=\"ISBN\" type=\"string”/&gt;&lt;!--and this is complex type--&gt;&lt;element&gt;   &lt;complexType&gt;     &lt;sequence&gt;...     &lt;/sequence&gt;   &lt;/complexType&gt;&lt;/element&gt;&lt;/html&gt;At the top of the document, we declare ?xml version=”1.0”? and include xs:schema which gives definition to the Porterhouse Library root element. You may have seen that there is no xs: prefix above, so we follow through with xmlns:xs=”http://www.3.org/2001/XMLSchema, which announces the document namespace, datatypes, and elements. Root element tags should be closed before the rules of the schema can be added, which may be ended with &lt;/xs:schema&gt;. Once the XML Schema is complete, we should, associate this XML schema with the Porterhouse Library XML document from the definition of its root element like this:&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;PorterhouseLibrary xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:noNamespaceSchemaLocation=\"PLdata.xsd\"&gt;Referencing XML Schema in the XML documentWe can continue with this approach or convert the XML document to yield an XSD document which can be parsed by a validator as follows:&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;xs:schema attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\"xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"&gt;  &lt;xs:element name=\"Bookdata\"&gt;    &lt;xs:complexType&gt;      &lt;xs:sequence&gt;        &lt;xs:element maxOccurs=\"unbounded\" name=\"Book\"&gt;          &lt;xs:complexType&gt;            &lt;xs:sequence&gt;              &lt;xs:element name=\"ISBN\" type=\"xs:string\" /&gt;              &lt;xs:element name=\"Title\" type=\"xs:string\" /&gt;              &lt;xs:element name=\"AvgLoan_4y\" type=\"xs:unsignedByte\" /&gt;              &lt;xs:element name=\"AvgRequest_4y\" type=\"xs:unsignedByte\" /&gt;              &lt;xs:element name=\"AuthorFName\" type=\"xs:string\" /&gt;              &lt;xs:element name=\"AuthorSName\" type=\"xs:string\" /&gt;              &lt;xs:element name=\"Publisher_Name\" type=\"xs:string\" /&gt;              &lt;xs:element name=\"Publishing_Date\" type=\"xs:date\" /&gt;              &lt;xs:element name=\"Edition\" type=\"xs:unsignedByte\" /&gt;              &lt;xs:element name=\"Volumes\" type=\"xs:unsignedByte\" /&gt;              &lt;xs:element name=\"PAddressline1\" type=\"xs:string\" /&gt;              &lt;xs:element name=\"PAddressline2\" type=\"xs:string\" /&gt;              &lt;xs:element name=\"PAddresscode\" type=\"xs:string\" /&gt;              &lt;xs:element name=\"ContactTelephone\" type=\"xs:string\" /&gt;            &lt;/xs:sequence&gt;          &lt;/xs:complexType&gt;        &lt;/xs:element&gt;      &lt;/xs:sequence&gt;    &lt;/xs:complexType&gt;  &lt;/xs:element&gt;&lt;/xs:schema&gt;Valid XSD document – Porterhouse LibrarySteps to display XML on W3Much like a function, a transformer needs an input, and for XML to be displayed, two documents need to be parsed. The first is an XSLT document - an XML application, forming part of the Extensible Style Sheet Language (XSL) that is responsible for processing sources to render new source trees at run time. So we need XSLT to display the source of an XML document, our second input. This necessitates a template that declares control over element namespaces (prefix xsl). This offers output data instructions that relate the PorterhouseLibrary source tree with attributes. In so doing, the template matches class nodes from the source document, and specifies the result of the tree. We start the beginning of the XSLT like this:&lt;?xml version=\"1.0\"?&gt; &lt;!--the XSLT style sheet is an XML document--&gt;&lt;xsl:stylesheet version=\"1.0\"xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"&gt; &lt;!—specifies namespace andprefix xsl--&gt;… &lt;!—root template goes here--&gt;A comment is mentioned with reference to a ‘root template’ in the code directly above. This is a description of the process that outputs root node content. It is needed when an XSLT document is parsed, as the processer will first identify the rules applying to the root node of the Porterhouse XML document. We start this sub-template with xsl:template match= to tell the transformer to match the root node PorterhouseLibrary from the XML source document, and end with xsl:template. In between the two, rules and parameters are defined that applies to the content of the PorterhouseLibrary root and all its children such as, tables, colour, and alignments. Below, I choose to fill the void with code such that the XSLT will display a table called Book Information. It aims to show the Title and ISBN Number of three book entry tuples using xsl:value-ofelement to output node content by declaring string values.&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;xsl:stylesheet    xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\"&gt;    &lt;xsl:output method=\"html\" /&gt;    &lt;xsl:template match=\"/\"&gt;        &lt;html&gt;            &lt;body&gt;                &lt;h2&gt;Book Information&lt;/h2&gt;                &lt;table border=\"1\"&gt;                    &lt;tr bgcolor=\"#dcdcdc\"&gt;                        &lt;th style=\"text-align:left\"&gt;Title&lt;/th&gt;                        &lt;th style=\"text-align:left\"&gt;ISBN Number&lt;/th&gt;                    &lt;/tr&gt;                    &lt;xsl:for-each select=\"PorterhouseLibrary/Book\"&gt;                        &lt;tr&gt;                            &lt;td&gt;                                &lt;xsl:value-of select=\"Title\" /&gt;                            &lt;/td&gt;                            &lt;td&gt;\t                        &lt;xsl:value-of select=\"ISBN\" /&gt;                            &lt;/td&gt;                         &lt;/tr&gt;                     &lt;/xsl:for-each&gt;                 &lt;/table&gt;             &lt;/body&gt;         &lt;/html&gt;     &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;TransformThe XLST cannot do what it has been asked without being processed together with the wellformed XML document in 5.1 to yield HTML. It is the reason why I inserted xsl:output method=”html” into the header information in Figure 5.6, which sets the processors output method accordingly. The transformation process boils down the Porterhouse XML document into a new one, matching templates as it processes it source tree node.DisplaySomething new is created whenever the XLST transform is run so one can always reorganise elements and build on the data we have – in my view, following familiar lines with Mayer’s (1988) extension ideology. This is unlike CSS, which is also limited by a strict ordering of text that follows the sequence of input data, but which may still be applied post output (Ladd &amp; O’Donnell, 2001, p. 394 1). The rendered result of the Porterhouse XML document is known as serialization, and, as such transformation is not just for want of HTML, but for variable [1..*] data stream outputs (Amiano, et al., 2006, p. 80 2).&lt;html&gt;   &lt;body&gt;      &lt;h2&gt;Book Information&lt;/h2&gt;      &lt;table border=\"1\"&gt;         &lt;tr bgcolor=\"#dcdcdc\"&gt;            &lt;th style=\"text-align:left\"&gt;Title&lt;/th&gt;            &lt;th style=\"text-align:left\"&gt;ISBN Number&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;            &lt;td&gt;Deleniti&lt;/td&gt;            &lt;td&gt;978-2-8691-4951-9&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;            &lt;td&gt;Est&lt;/td&gt;            &lt;td&gt;978-2-5076-0558-2&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;            &lt;td&gt;Velit&lt;/td&gt;            &lt;td&gt;978-1-5357-4263-4&lt;/td&gt;         &lt;/tr&gt;      &lt;/table&gt;   &lt;/body&gt;&lt;/html&gt;Rendered XML in HTML            Ladd, E. &amp; O’Donnell, J., 2001. Platinum Edition Using XHTML, XML and Java 2. First ed. Que Publishing. &#8617;              Amiano, M., D’Cruz, C., Ethier, K. &amp; Thomas, M. D., 2006. XML: Problem - Design -Solution. Firt ed. Indianna, US: John Wiley &amp; Sons. &#8617;      ",
            "content_html": "<p>Using XSLT to tranform XML to XHMT.</p><embed src=\"/assets/images/xsltransform.svg\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /><center><i>Process overview</i></center><h1 id=\"forming-the-xml\">Forming the XML</h1><p>When an XML document complies with the rules of its syntactical structure it is said to be ‘well-formed’, according to the WS3. The XML document I form comes with a specification to implement.</p><p>I create database schema in SQL for a library called Porterhouse, starting with a single book table with test data.</p><div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">#</span><span class=\"o\">#</span> <span class=\"k\">TABLE</span> <span class=\"k\">STRUCTURE</span> <span class=\"k\">FOR</span><span class=\"p\">:</span> <span class=\"n\">Book</span><span class=\"o\">#</span><span class=\"k\">DROP</span> <span class=\"k\">TABLE</span> <span class=\"n\">IF</span> <span class=\"k\">EXISTS</span> <span class=\"nv\">`Book`</span><span class=\"p\">;</span><span class=\"k\">CREATE</span> <span class=\"k\">TABLE</span> <span class=\"nv\">`Book`</span> <span class=\"p\">(</span><span class=\"nv\">`ISBN`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">17</span><span class=\"p\">)</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_unicode_ci</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`Title`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_unicode_ci</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`AvgLoan_4y`</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`AvgRequest_4y`</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`AuthorFName`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_unicode_ci</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`AuthorSName`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">)</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_unicode_ci</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`Publisher_Name`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_unicode_ci</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`Publishing_Date`</span> <span class=\"nb\">date</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`Edition`</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`Volumes`</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`PAddressline1`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_unicode_ci</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`PAddressline2`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_unicode_ci</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`PAddresscode`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_unicode_ci</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"nv\">`ContactTelephone`</span> <span class=\"nb\">varchar</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">)</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_unicode_ci</span> <span class=\"k\">NOT</span> <span class=\"k\">NULL</span><span class=\"p\">,</span><span class=\"k\">PRIMARY</span> <span class=\"k\">KEY</span> <span class=\"p\">(</span><span class=\"nv\">`ISBN`</span><span class=\"p\">)</span><span class=\"p\">)</span> <span class=\"n\">ENGINE</span><span class=\"o\">=</span><span class=\"n\">InnoDB</span> <span class=\"k\">DEFAULT</span> <span class=\"n\">CHARSET</span><span class=\"o\">=</span><span class=\"n\">utf8</span> <span class=\"k\">COLLATE</span><span class=\"o\">=</span><span class=\"n\">utf8_unicode_ci</span><span class=\"p\">;</span><span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"nv\">`Book`</span> <span class=\"p\">(</span><span class=\"nv\">`ISBN`</span><span class=\"p\">,</span> <span class=\"nv\">`Title`</span><span class=\"p\">,</span> <span class=\"nv\">`AvgLoan_4y`</span><span class=\"p\">,</span> <span class=\"nv\">`AvgRequest_4y`</span><span class=\"p\">,</span> <span class=\"nv\">`AuthorFName`</span><span class=\"p\">,</span><span class=\"nv\">`AuthorSName`</span><span class=\"p\">,</span> <span class=\"nv\">`Publisher_Name`</span><span class=\"p\">,</span> <span class=\"nv\">`Publishing_Date`</span><span class=\"p\">,</span> <span class=\"nv\">`Edition`</span><span class=\"p\">,</span> <span class=\"nv\">`Volumes`</span><span class=\"p\">,</span><span class=\"nv\">`PAddressline1`</span><span class=\"p\">,</span> <span class=\"nv\">`PAddressline2`</span><span class=\"p\">,</span> <span class=\"nv\">`PAddresscode`</span><span class=\"p\">,</span> <span class=\"nv\">`ContactTelephone`</span><span class=\"p\">)</span> <span class=\"k\">VALUES</span><span class=\"p\">(</span><span class=\"s1\">'978-2-8691-4951-9'</span><span class=\"p\">,</span> <span class=\"s1\">'Deleniti'</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"s1\">'Reyna'</span><span class=\"p\">,</span> <span class=\"s1\">'Bailey'</span><span class=\"p\">,</span> <span class=\"s1\">'Larson-Schultz'</span><span class=\"p\">,</span><span class=\"s1\">'1985-08-08'</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"s1\">'29348 Walsh View Suite 364'</span><span class=\"p\">,</span> <span class=\"s1\">'Koelpinbury'</span><span class=\"p\">,</span> <span class=\"s1\">'54944-8088'</span><span class=\"p\">,</span><span class=\"s1\">'09999508834'</span><span class=\"p\">);</span><span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"nv\">`Book`</span> <span class=\"p\">(</span><span class=\"nv\">`ISBN`</span><span class=\"p\">,</span> <span class=\"nv\">`Title`</span><span class=\"p\">,</span> <span class=\"nv\">`AvgLoan_4y`</span><span class=\"p\">,</span> <span class=\"nv\">`AvgRequest_4y`</span><span class=\"p\">,</span> <span class=\"nv\">`AuthorFName`</span><span class=\"p\">,</span><span class=\"nv\">`AuthorSName`</span><span class=\"p\">,</span> <span class=\"nv\">`Publisher_Name`</span><span class=\"p\">,</span> <span class=\"nv\">`Publishing_Date`</span><span class=\"p\">,</span> <span class=\"nv\">`Edition`</span><span class=\"p\">,</span> <span class=\"nv\">`Volumes`</span><span class=\"p\">,</span><span class=\"nv\">`PAddressline1`</span><span class=\"p\">,</span> <span class=\"nv\">`PAddressline2`</span><span class=\"p\">,</span> <span class=\"nv\">`PAddresscode`</span><span class=\"p\">,</span> <span class=\"nv\">`ContactTelephone`</span><span class=\"p\">)</span> <span class=\"k\">VALUES</span><span class=\"p\">(</span><span class=\"s1\">'978-2-5076-0558-2'</span><span class=\"p\">,</span> <span class=\"s1\">'Est'</span><span class=\"p\">,</span> <span class=\"mi\">18</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'Ramona'</span><span class=\"p\">,</span> <span class=\"s1\">'Williamson'</span><span class=\"p\">,</span> <span class=\"s1\">'Jast-Simonis'</span><span class=\"p\">,</span><span class=\"s1\">'1984-04-03'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">'092 Keebler Freeway'</span><span class=\"p\">,</span> <span class=\"s1\">'Alanischester'</span><span class=\"p\">,</span> <span class=\"s1\">'32519-2138'</span><span class=\"p\">,</span> <span class=\"s1\">'649-867-3233'</span><span class=\"p\">);</span><span class=\"k\">INSERT</span> <span class=\"k\">INTO</span> <span class=\"nv\">`Book`</span> <span class=\"p\">(</span><span class=\"nv\">`ISBN`</span><span class=\"p\">,</span> <span class=\"nv\">`Title`</span><span class=\"p\">,</span> <span class=\"nv\">`AvgLoan_4y`</span><span class=\"p\">,</span> <span class=\"nv\">`AvgRequest_4y`</span><span class=\"p\">,</span> <span class=\"nv\">`AuthorFName`</span><span class=\"p\">,</span><span class=\"nv\">`AuthorSName`</span><span class=\"p\">,</span> <span class=\"nv\">`Publisher_Name`</span><span class=\"p\">,</span> <span class=\"nv\">`Publishing_Date`</span><span class=\"p\">,</span> <span class=\"nv\">`Edition`</span><span class=\"p\">,</span> <span class=\"nv\">`Volumes`</span><span class=\"p\">,</span><span class=\"mi\">49</span><span class=\"nv\">`PAddressline1`</span><span class=\"p\">,</span> <span class=\"nv\">`PAddressline2`</span><span class=\"p\">,</span> <span class=\"nv\">`PAddresscode`</span><span class=\"p\">,</span> <span class=\"nv\">`ContactTelephone`</span><span class=\"p\">)</span> <span class=\"k\">VALUES</span><span class=\"p\">(</span><span class=\"s1\">'978-1-5357-4263-4'</span><span class=\"p\">,</span> <span class=\"s1\">'Velit'</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'Pablo'</span><span class=\"p\">,</span> <span class=\"s1\">'Leuschke'</span><span class=\"p\">,</span> <span class=\"s1\">'Sipes and Sons'</span><span class=\"p\">,</span> <span class=\"s1\">'1979-10-02'</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">'899 Daugherty Brooks'</span><span class=\"p\">,</span> <span class=\"s1\">'Stellastad'</span><span class=\"p\">,</span> <span class=\"s1\">'27145'</span><span class=\"p\">,</span> <span class=\"s1\">'(604)992-042'</span><span class=\"p\">);</span></code></pre></div></div><p>I feed this data to an online XML converter where I can rename the output root and child elements of the document to PorterhouseLibrary and Book respectively. The foregoing code shows a well-formed XML document with comments against the five conforming areas: A root element, closing tags, elements properly nested, case matched, and values.</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span> <span class=\"c\">&lt;!-- 5 value \"\" quoted --&gt;</span><span class=\"nt\">&lt;PorterhouseLibrary&gt;</span><span class=\"c\">&lt;!-- 1 Root element--&gt;</span>     <span class=\"nt\">&lt;Book&gt;</span><span class=\"c\">&lt;!-- 3 nested--&gt;</span>\t <span class=\"nt\">&lt;ISBN&gt;</span> 978-2-8691-4951-9<span class=\"nt\">&lt;/ISBN&gt;</span>\t <span class=\"nt\">&lt;Title&gt;</span>Deleniti<span class=\"nt\">&lt;/Title&gt;</span>\t <span class=\"nt\">&lt;AvgLoan_4y&gt;</span>20<span class=\"nt\">&lt;/AvgLoan_4y&gt;</span>\t <span class=\"nt\">&lt;AvgRequest_4y&gt;</span>12<span class=\"nt\">&lt;/AvgRequest_4y&gt;</span>\t <span class=\"nt\">&lt;AuthorFName&gt;</span>Reyna<span class=\"nt\">&lt;/AuthorFName&gt;</span>\t <span class=\"nt\">&lt;AuthorSName&gt;</span>Bailey<span class=\"nt\">&lt;/AuthorSName&gt;</span>\t <span class=\"nt\">&lt;Publisher_Name&gt;</span>Larson-Schultz<span class=\"nt\">&lt;/Publisher_Name&gt;</span>\t <span class=\"nt\">&lt;Publishing_Date&gt;</span>1985-08-08<span class=\"nt\">&lt;/Publishing_Date&gt;</span>\t <span class=\"nt\">&lt;Edition&gt;</span>3<span class=\"nt\">&lt;/Edition&gt;</span>\t <span class=\"nt\">&lt;Volumes&gt;</span>9<span class=\"nt\">&lt;/Volumes&gt;</span>\t <span class=\"nt\">&lt;PAddressline1&gt;</span>29348 Walsh View Suite 364<span class=\"nt\">&lt;/PAddressline1&gt;</span>\t <span class=\"nt\">&lt;PAddressline2&gt;</span>Koelpinbury<span class=\"nt\">&lt;/PAddressline2&gt;</span>\t <span class=\"nt\">&lt;PAddresscode&gt;</span>54944-8088<span class=\"nt\">&lt;/PAddresscode&gt;</span>\t <span class=\"nt\">&lt;ContactTelephone&gt;</span>09999508834<span class=\"nt\">&lt;/ContactTelephone&gt;</span>    <span class=\"nt\">&lt;/Book&gt;</span><span class=\"c\">&lt;!-- 2 closing tag--&gt;</span>    <span class=\"nt\">&lt;Book&gt;</span>         <span class=\"nt\">&lt;ISBN&gt;</span> 978-2-5076-0558-2<span class=\"nt\">&lt;/ISBN&gt;</span>         <span class=\"nt\">&lt;Title&gt;</span>Est<span class=\"nt\">&lt;/Title&gt;</span>         <span class=\"nt\">&lt;AvgLoan_4y&gt;</span>18<span class=\"nt\">&lt;/AvgLoan_4y&gt;</span>         <span class=\"nt\">&lt;AvgRequest_4y&gt;</span>10<span class=\"nt\">&lt;/AvgRequest_4y&gt;</span>         <span class=\"nt\">&lt;AuthorFName&gt;</span>Ramona<span class=\"nt\">&lt;/AuthorFName&gt;</span>         <span class=\"nt\">&lt;AuthorSName&gt;</span>Williamson<span class=\"nt\">&lt;/AuthorSName&gt;</span>         <span class=\"nt\">&lt;Publisher_Name&gt;</span>Jast-Simonis<span class=\"nt\">&lt;/Publisher_Name&gt;</span>         <span class=\"nt\">&lt;Publishing_Date&gt;</span>1984-04-03<span class=\"nt\">&lt;/Publishing_Date&gt;</span>\t <span class=\"nt\">&lt;Edition&gt;</span>2<span class=\"nt\">&lt;/Edition&gt;</span>\t <span class=\"nt\">&lt;Volumes&gt;</span>4<span class=\"nt\">&lt;/Volumes&gt;</span>\t <span class=\"nt\">&lt;PAddressline1&gt;</span>092 Keebler Freeway<span class=\"nt\">&lt;/PAddressline1&gt;</span>\t <span class=\"nt\">&lt;PAddressline2&gt;</span>Alanischester<span class=\"nt\">&lt;/PAddressline2&gt;</span>\t <span class=\"nt\">&lt;PAddresscode&gt;</span>32519-2138<span class=\"nt\">&lt;/PAddresscode&gt;</span>\t <span class=\"nt\">&lt;ContactTelephone&gt;</span>649-867-3233<span class=\"nt\">&lt;/ContactTelephone&gt;</span>     <span class=\"nt\">&lt;/Book&gt;</span><span class=\"c\">&lt;!-- 4 Case sensitive, always B for Book --&gt;</span>     <span class=\"nt\">&lt;Book&gt;</span>         <span class=\"nt\">&lt;ISBN&gt;</span> 978-1-5357-4263-4<span class=\"nt\">&lt;/ISBN&gt;</span>         <span class=\"nt\">&lt;Title&gt;</span>Velit<span class=\"nt\">&lt;/Title&gt;</span>         <span class=\"nt\">&lt;AvgLoan_4y&gt;</span>6<span class=\"nt\">&lt;/AvgLoan_4y&gt;</span>         <span class=\"nt\">&lt;AvgRequest_4y&gt;</span>2<span class=\"nt\">&lt;/AvgRequest_4y&gt;</span>         <span class=\"nt\">&lt;AuthorFName&gt;</span>Pablo<span class=\"nt\">&lt;/AuthorFName&gt;</span>         <span class=\"nt\">&lt;AuthorSName&gt;</span>Leuschke<span class=\"nt\">&lt;/AuthorSName&gt;</span>         <span class=\"nt\">&lt;Publisher_Name&gt;</span>Sipes and Sons<span class=\"nt\">&lt;/Publisher_Name&gt;</span>         <span class=\"nt\">&lt;Publishing_Date&gt;</span>1979-10-02<span class=\"nt\">&lt;/Publishing_Date&gt;</span>         <span class=\"nt\">&lt;Edition&gt;</span>4<span class=\"nt\">&lt;/Edition&gt;</span>         <span class=\"nt\">&lt;Volumes&gt;</span>6<span class=\"nt\">&lt;/Volumes&gt;</span>         <span class=\"nt\">&lt;PAddressline1&gt;</span>899 Daugherty Brooks<span class=\"nt\">&lt;/PAddressline1&gt;</span>         <span class=\"nt\">&lt;PAddressline2&gt;</span>Stellastad<span class=\"nt\">&lt;/PAddressline2&gt;</span>         <span class=\"nt\">&lt;PAddresscode&gt;</span>27145<span class=\"nt\">&lt;/PAddresscode&gt;</span>         <span class=\"nt\">&lt;ContactTelephone&gt;</span>(604)992-042<span class=\"nt\">&lt;/ContactTelephone&gt;</span>     <span class=\"nt\">&lt;/Book&gt;</span><span class=\"nt\">&lt;/PorterhouseLibrary&gt;</span></code></pre></div></div><h1 id=\"validating-an-xml-document\">Validating an XML document</h1><p>Validating an XML document is crucial for Porterhouse Library’s database being defined according to XML schema, wherein constraints on information storage and data types apply to avoid anomalous runtime. To make my XML schema valid, the crux of it should have elements defined as either a simple type (text only) or complex type (attributes and/or child elements).</p><div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">&lt;!--this is simple type--&gt;</span><span class=\"nt\">&lt;element</span> <span class=\"na\">name=</span><span class=\"s\">\"ISBN\"</span> <span class=\"na\">type=</span><span class=\"s\">\"string”/</span><span class=\"nt\">&gt;</span><span class=\"c\">&lt;!--and this is complex type--&gt;</span><span class=\"nt\">&lt;element&gt;</span>   <span class=\"nt\">&lt;complexType&gt;</span>     <span class=\"nt\">&lt;sequence&gt;</span>...     <span class=\"nt\">&lt;/sequence&gt;</span>   <span class=\"nt\">&lt;/complexType&gt;</span><span class=\"nt\">&lt;/element&gt;</span><span class=\"nt\">&lt;/html&gt;</span></code></pre></div></div><p>At the top of the document, we declare <span style=\"font-family: Consolas\">?xml version=”1.0”?</span> and include <span style=\"font-family: Consolas\">xs:schema</span> which gives definition to the Porterhouse Library root element. You may have seen that there is no xs: prefix above, so we follow through with <span style=\"font-family: Consolas\">xmlns:xs=”http://www.3.org/2001/XMLSchema</span>, which announces the document namespace, datatypes, and elements. Root element tags should be closed before the rules of the schema can be added, which may be ended with &lt;/xs:schema&gt;. Once the XML Schema is complete, we should, associate this XML schema with the Porterhouse Library XML document from the definition of its root element like this:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><span class=\"nt\">&lt;PorterhouseLibrary</span> <span class=\"na\">xmlns:xsi=</span><span class=\"s\">\"http://www.w3.org/2001/XMLSchema-instance\"</span><span class=\"na\">xsi:noNamespaceSchemaLocation=</span><span class=\"s\">\"PLdata.xsd\"</span><span class=\"nt\">&gt;</span></code></pre></div></div><p><em>Referencing XML Schema in the XML document</em></p><p>We can continue with this approach or convert the XML document to yield an XSD document which can be parsed by a validator as follows:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><span class=\"nt\">&lt;xs:schema</span> <span class=\"na\">attributeFormDefault=</span><span class=\"s\">\"unqualified\"</span> <span class=\"na\">elementFormDefault=</span><span class=\"s\">\"qualified\"</span><span class=\"na\">xmlns:xs=</span><span class=\"s\">\"http://www.w3.org/2001/XMLSchema\"</span><span class=\"nt\">&gt;</span>  <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"Bookdata\"</span><span class=\"nt\">&gt;</span>    <span class=\"nt\">&lt;xs:complexType&gt;</span>      <span class=\"nt\">&lt;xs:sequence&gt;</span>        <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">maxOccurs=</span><span class=\"s\">\"unbounded\"</span> <span class=\"na\">name=</span><span class=\"s\">\"Book\"</span><span class=\"nt\">&gt;</span>          <span class=\"nt\">&lt;xs:complexType&gt;</span>            <span class=\"nt\">&lt;xs:sequence&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"ISBN\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:string\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"Title\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:string\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"AvgLoan_4y\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:unsignedByte\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"AvgRequest_4y\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:unsignedByte\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"AuthorFName\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:string\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"AuthorSName\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:string\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"Publisher_Name\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:string\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"Publishing_Date\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:date\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"Edition\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:unsignedByte\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"Volumes\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:unsignedByte\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"PAddressline1\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:string\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"PAddressline2\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:string\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"PAddresscode\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:string\"</span> <span class=\"nt\">/&gt;</span>              <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">\"ContactTelephone\"</span> <span class=\"na\">type=</span><span class=\"s\">\"xs:string\"</span> <span class=\"nt\">/&gt;</span>            <span class=\"nt\">&lt;/xs:sequence&gt;</span>          <span class=\"nt\">&lt;/xs:complexType&gt;</span>        <span class=\"nt\">&lt;/xs:element&gt;</span>      <span class=\"nt\">&lt;/xs:sequence&gt;</span>    <span class=\"nt\">&lt;/xs:complexType&gt;</span>  <span class=\"nt\">&lt;/xs:element&gt;</span><span class=\"nt\">&lt;/xs:schema&gt;</span></code></pre></div></div><p><em>Valid XSD document – Porterhouse Library</em></p><h1 id=\"steps-to-display-xml-on-w3\">Steps to display XML on W3</h1><p>Much like a function, a transformer needs an input, and for XML to be displayed, two documents need to be parsed. The first is an XSLT document - an XML application, forming part of the Extensible Style Sheet Language (XSL) that is responsible for processing sources to render new source trees at run time. So we need XSLT to display the source of an XML document, our second input. This necessitates a template that declares control over element namespaces (prefix xsl). This offers output data instructions that relate the PorterhouseLibrary source tree with attributes. In so doing, the template matches class nodes from the source document, and specifies the result of the tree. We start the beginning of the XSLT like this:</p><div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\"?&gt;</span> <span class=\"c\">&lt;!--the XSLT style sheet is an XML document--&gt;</span><span class=\"nt\">&lt;xsl:stylesheet</span> <span class=\"na\">version=</span><span class=\"s\">\"1.0\"</span><span class=\"na\">xmlns:xsl=</span><span class=\"s\">\"http://www.w3.org/1999/XSL/Transform\"</span><span class=\"nt\">&gt;</span> <span class=\"cp\">&lt;!—specifies namespace andprefix xsl--&gt;</span>… <span class=\"cp\">&lt;!—root template goes here--&gt;</span></code></pre></div></div><p>A comment is mentioned with reference to a ‘root template’ in the code directly above. This is a description of the process that outputs root node content. It is needed when an XSLT document is parsed, as the processer will first identify the rules applying to the root node of the Porterhouse XML document. We start this sub-template with <span style=\"font-family: Consolas\">xsl:template match=</span> to tell the transformer to match the root node PorterhouseLibrary from the XML source document, and end with <span style=\"font-family: Consolas\">xsl:template</span>. In between the two, rules and parameters are defined that applies to the content of the PorterhouseLibrary root and all its children such as, tables, colour, and alignments. Below, I choose to fill the void with code such that the XSLT will display a table called Book Information. It aims to show the Title and ISBN Number of three book entry tuples using <span style=\"font-family: Consolas\">xsl:value-of</span>element to output node content by declaring string values.</p><div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><span class=\"nt\">&lt;xsl:stylesheet</span>    <span class=\"na\">xmlns:xsl=</span><span class=\"s\">\"http://www.w3.org/1999/XSL/Transform\"</span> <span class=\"na\">version=</span><span class=\"s\">\"1.0\"</span><span class=\"nt\">&gt;</span>    <span class=\"nt\">&lt;xsl:output</span> <span class=\"na\">method=</span><span class=\"s\">\"html\"</span> <span class=\"nt\">/&gt;</span>    <span class=\"nt\">&lt;xsl:template</span> <span class=\"na\">match=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;</span>        <span class=\"nt\">&lt;html&gt;</span>            <span class=\"nt\">&lt;body&gt;</span>                <span class=\"nt\">&lt;h2&gt;</span>Book Information<span class=\"nt\">&lt;/h2&gt;</span>                <span class=\"nt\">&lt;table</span> <span class=\"na\">border=</span><span class=\"s\">\"1\"</span><span class=\"nt\">&gt;</span>                    <span class=\"nt\">&lt;tr</span> <span class=\"na\">bgcolor=</span><span class=\"s\">\"#dcdcdc\"</span><span class=\"nt\">&gt;</span>                        <span class=\"nt\">&lt;th</span> <span class=\"na\">style=</span><span class=\"s\">\"text-align:left\"</span><span class=\"nt\">&gt;</span>Title<span class=\"nt\">&lt;/th&gt;</span>                        <span class=\"nt\">&lt;th</span> <span class=\"na\">style=</span><span class=\"s\">\"text-align:left\"</span><span class=\"nt\">&gt;</span>ISBN Number<span class=\"nt\">&lt;/th&gt;</span>                    <span class=\"nt\">&lt;/tr&gt;</span>                    <span class=\"nt\">&lt;xsl:for-each</span> <span class=\"na\">select=</span><span class=\"s\">\"PorterhouseLibrary/Book\"</span><span class=\"nt\">&gt;</span>                        <span class=\"nt\">&lt;tr&gt;</span>                            <span class=\"nt\">&lt;td&gt;</span>                                <span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">\"Title\"</span> <span class=\"nt\">/&gt;</span>                            <span class=\"nt\">&lt;/td&gt;</span>                            <span class=\"nt\">&lt;td&gt;</span>\t                        <span class=\"nt\">&lt;xsl:value-of</span> <span class=\"na\">select=</span><span class=\"s\">\"ISBN\"</span> <span class=\"nt\">/&gt;</span>                            <span class=\"nt\">&lt;/td&gt;</span>                         <span class=\"nt\">&lt;/tr&gt;</span>                     <span class=\"nt\">&lt;/xsl:for-each&gt;</span>                 <span class=\"nt\">&lt;/table&gt;</span>             <span class=\"nt\">&lt;/body&gt;</span>         <span class=\"nt\">&lt;/html&gt;</span>     <span class=\"nt\">&lt;/xsl:template&gt;</span><span class=\"nt\">&lt;/xsl:stylesheet&gt;</span></code></pre></div></div><h1 id=\"transform\">Transform</h1><p>The XLST cannot do what it has been asked without being processed together with the wellformed XML document in 5.1 to yield HTML. It is the reason why I inserted <span style=\"font-family: Consolas\">xsl:output method=”html”</span> into the header information in Figure 5.6, which sets the processors output method accordingly. The transformation process boils down the Porterhouse XML document into a new one, matching templates as it processes it source tree node.</p><h1 id=\"display\">Display</h1><p>Something new is created whenever the XLST transform is run so one can always reorganise elements and build on the data we have – in my view, following familiar lines with Mayer’s (1988) extension ideology. This is unlike CSS, which is also limited by a strict ordering of text that follows the sequence of input data, but which may still be applied post output (Ladd &amp; O’Donnell, 2001, p. 394 <sup id=\"fnref:fn1\" role=\"doc-noteref\"><a href=\"#fn:fn1\" class=\"footnote\" rel=\"footnote\">1</a></sup>). The rendered result of the Porterhouse XML document is known as serialization, and, as such transformation is not just for want of HTML, but for variable [1..*] data stream outputs (Amiano, et al., 2006, p. 80 <sup id=\"fnref:fn2\" role=\"doc-noteref\"><a href=\"#fn:fn2\" class=\"footnote\" rel=\"footnote\">2</a></sup>).</p><div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;html&gt;</span>   <span class=\"nt\">&lt;body&gt;</span>      <span class=\"nt\">&lt;h2&gt;</span>Book Information<span class=\"nt\">&lt;/h2&gt;</span>      <span class=\"nt\">&lt;table</span> <span class=\"na\">border=</span><span class=\"s\">\"1\"</span><span class=\"nt\">&gt;</span>         <span class=\"nt\">&lt;tr</span> <span class=\"na\">bgcolor=</span><span class=\"s\">\"#dcdcdc\"</span><span class=\"nt\">&gt;</span>            <span class=\"nt\">&lt;th</span> <span class=\"na\">style=</span><span class=\"s\">\"text-align:left\"</span><span class=\"nt\">&gt;</span>Title<span class=\"nt\">&lt;/th&gt;</span>            <span class=\"nt\">&lt;th</span> <span class=\"na\">style=</span><span class=\"s\">\"text-align:left\"</span><span class=\"nt\">&gt;</span>ISBN Number<span class=\"nt\">&lt;/th&gt;</span>         <span class=\"nt\">&lt;/tr&gt;</span>         <span class=\"nt\">&lt;tr&gt;</span>            <span class=\"nt\">&lt;td&gt;</span>Deleniti<span class=\"nt\">&lt;/td&gt;</span>            <span class=\"nt\">&lt;td&gt;</span>978-2-8691-4951-9<span class=\"nt\">&lt;/td&gt;</span>         <span class=\"nt\">&lt;/tr&gt;</span>         <span class=\"nt\">&lt;tr&gt;</span>            <span class=\"nt\">&lt;td&gt;</span>Est<span class=\"nt\">&lt;/td&gt;</span>            <span class=\"nt\">&lt;td&gt;</span>978-2-5076-0558-2<span class=\"nt\">&lt;/td&gt;</span>         <span class=\"nt\">&lt;/tr&gt;</span>         <span class=\"nt\">&lt;tr&gt;</span>            <span class=\"nt\">&lt;td&gt;</span>Velit<span class=\"nt\">&lt;/td&gt;</span>            <span class=\"nt\">&lt;td&gt;</span>978-1-5357-4263-4<span class=\"nt\">&lt;/td&gt;</span>         <span class=\"nt\">&lt;/tr&gt;</span>      <span class=\"nt\">&lt;/table&gt;</span>   <span class=\"nt\">&lt;/body&gt;</span><span class=\"nt\">&lt;/html&gt;</span></code></pre></div></div><p><br /></p><embed src=\"/assets/images/xmlhtmlrender.svg\" width=\"25%\" height=\"25%\" style=\"display: block; margin: 0 auto\" /><center><i>Rendered XML in HTML</i></center><p><br /></p><div class=\"footnotes\" role=\"doc-endnotes\">  <ol>    <li id=\"fn:fn1\" role=\"doc-endnote\">      <p>Ladd, E. &amp; O’Donnell, J., 2001. Platinum Edition Using XHTML, XML and Java 2. First ed. Que Publishing. <a href=\"#fnref:fn1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn2\" role=\"doc-endnote\">      <p>Amiano, M., D’Cruz, C., Ethier, K. &amp; Thomas, M. D., 2006. XML: Problem - Design -Solution. Firt ed. Indianna, US: John Wiley &amp; Sons. <a href=\"#fnref:fn2\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>  </ol></div>",
            "url": "http://localhost:4000/2020/04/14/xml-xslt",
            
            
            
            "tags": ["XML","XSLT"],
            
            "date_published": "2020-04-14T00:00:00+01:00",
            "date_modified": "2020-04-14T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2019/12/01/attributes-for-a-person-class",
            "title": "Attributes for a person class",
            "summary": null,
            "content_text": "While the transitivity of generalisation passes {abstract}Person class features to multiple child classes, each can have their own additional attributes and operations encapsulated. Class User, for example, has already a unique set of methods, but needs additional attributes such that they ‘partition the universe of objects’ in class {abstract}Person for utility - Dathan &amp; Ramnath (2015)1. If a class User is found to be particular useful, and needs extra attributes, a new class can extend from it with the added attributes and methods. To discover attributes that are undefinable for an {abstract}Person class is to find classes that are what Meyer refers to as open for extension so code can be added as an ‘extension’ of the baseclass (Meyer, 1988 2).class User extends Person // class hierarchy extension{// User attributes}Concrete subclasses have two parts. The first, a derived hidden part, and an incremental extended part, forming a ‘substitutable’ subclass for its parent {abstract}Person – Liskov Substitution Principle (1988). A User then will have five attributes that cannot constitute a Person. The first, a (1) UserIDn, - something a Subcontractor cannot possess too – is added with an «invariant» constraint. The rationale for this is that every user will have a user identification number that is not null thereby forming an inheritance contract (Bruegge &amp; Dutoit, 2010 3). (2) username, and private login (3) password for a Person is necessary for users to access the system. Since users are employees of the ODS, it would be useful toreveal their National Insurance number (4) nINumber for Pay-As-You-Earn tax. Analysis of use case 1.3 indicates that ODS employees have variable functionality that extends so an enumeration of (5) authorisation, is included in the User class.Figure 1 Dervice attributesFigure 2 Five attributes and Java codeclass User extends Person {  public int userID;  public String userName;  private String password;  protected String nINumber;  public UType authorisation;}  Enumeration UType {  root_administrator;  general_administrator;  guest_patient;}            Dathan &amp; Ramnath, 2015. Object-Oriented Analysis, Design and Implementation: An Integrated Approach (Undergraduate Topics in Computer Science) &#8617;              Meyer, B., 1988. Object-oriented Software Construction. First ed. Santa Barbara, CA:Prentice-Hall. &#8617;              Bruegge &amp; Dutoit, 2010. Object-Oriented Software Engineering Using UML, Patterns, and Java: Pearson New International Edition &#8617;      ",
            "content_html": "<p>While the transitivity of generalisation passes <span style=\"font-family:Arial\">{abstract}Person</span> class features to multiple child classes, each can have their own additional attributes and operations encapsulated. Class <span style=\"font-family:Arial\">User</span>, for example, has already a unique set of methods, but needs additional attributes such that they ‘partition the universe of objects’ in class <span style=\"font-family:Arial\">{abstract}Person</span> for utility - Dathan &amp; Ramnath (2015)<sup id=\"fnref:fn1\" role=\"doc-noteref\"><a href=\"#fn:fn1\" class=\"footnote\" rel=\"footnote\">1</a></sup>. If a class <span style=\"font-family:Arial\">User</span> is found to be particular useful, and needs extra attributes, a new class can extend from it with the added attributes and methods. To discover attributes that are undefinable for an <span style=\"font-family:Arial\">{abstract}Person</span> class is to find classes that are what Meyer refers to as open for extension so code can be added as an ‘extension’ of the baseclass (Meyer, 1988 <sup id=\"fnref:fn2\" role=\"doc-noteref\"><a href=\"#fn:fn2\" class=\"footnote\" rel=\"footnote\">2</a></sup>).</p><div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">User</span> <span class=\"kd\">extends</span> <span class=\"nc\">Person</span> <span class=\"c1\">// class hierarchy extension</span><span class=\"o\">{</span><span class=\"c1\">// User attributes</span><span class=\"o\">}</span></code></pre></div></div><p>Concrete subclasses have two parts. The first, a derived hidden part, and an incremental extended part, forming a ‘substitutable’ subclass for its parent <span style=\"font-family:Arial\">{abstract}Person</span> – Liskov Substitution Principle (1988). A User then will have five attributes that cannot constitute a <span style=\"font-family:Arial\">Person</span>. The first, a (1) <span style=\"font-family:Arial\">UserIDn</span>, - something a Subcontractor cannot possess too – is added with an «invariant» constraint. The rationale for this is that every user will have a user identification number that is not null thereby forming an inheritance contract (Bruegge &amp; Dutoit, 2010 <sup id=\"fnref:fn3\" role=\"doc-noteref\"><a href=\"#fn:fn3\" class=\"footnote\" rel=\"footnote\">3</a></sup>). (2) username, and private login (3) password for a Person is necessary for users to access the system. Since users are employees of the ODS, it would be useful toreveal their National Insurance number (4) <span style=\"font-family:Arial\">nINumber</span> for Pay-As-You-Earn tax. Analysis of use case 1.3 indicates that ODS employees have variable functionality that extends so an enumeration of (5) <span style=\"font-family:Arial\">authorisation</span>, is included in the <span style=\"font-family:Arial\">User</span> class.</p><p><br /></p><embed src=\"/assets/images/derivedatt.svg\" /><p><em>Figure 1 Dervice attributes</em><br /><br /><br /><br /></p><embed src=\"/assets/images/derivedclasses.svg\" /><p><em>Figure 2 Five attributes and Java code</em><br /></p><div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">User</span> <span class=\"kd\">extends</span> <span class=\"nc\">Person</span> <span class=\"o\">{</span>  <span class=\"kd\">public</span> <span class=\"kt\">int</span> <span class=\"n\">userID</span><span class=\"o\">;</span>  <span class=\"kd\">public</span> <span class=\"nc\">String</span> <span class=\"n\">userName</span><span class=\"o\">;</span>  <span class=\"kd\">private</span> <span class=\"nc\">String</span> <span class=\"n\">password</span><span class=\"o\">;</span>  <span class=\"kd\">protected</span> <span class=\"nc\">String</span> <span class=\"n\">nINumber</span><span class=\"o\">;</span>  <span class=\"kd\">public</span> <span class=\"nc\">UType</span> <span class=\"n\">authorisation</span><span class=\"o\">;</span><span class=\"o\">}</span>  <span class=\"nc\">Enumeration</span> <span class=\"nc\">UType</span> <span class=\"o\">{</span>  <span class=\"n\">root_administrator</span><span class=\"o\">;</span>  <span class=\"n\">general_administrator</span><span class=\"o\">;</span>  <span class=\"n\">guest_patient</span><span class=\"o\">;</span><span class=\"o\">}</span></code></pre></div></div><div class=\"footnotes\" role=\"doc-endnotes\">  <ol>    <li id=\"fn:fn1\" role=\"doc-endnote\">      <p>Dathan &amp; Ramnath, 2015. Object-Oriented Analysis, Design and Implementation: An Integrated Approach (Undergraduate Topics in Computer Science) <a href=\"#fnref:fn1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn2\" role=\"doc-endnote\">      <p>Meyer, B., 1988. Object-oriented Software Construction. First ed. Santa Barbara, CA:Prentice-Hall. <a href=\"#fnref:fn2\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn3\" role=\"doc-endnote\">      <p>Bruegge &amp; Dutoit, 2010. Object-Oriented Software Engineering Using UML, Patterns, and Java: Pearson New International Edition <a href=\"#fnref:fn3\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>  </ol></div>",
            "url": "http://localhost:4000/2019/12/01/attributes-for-a-person-class",
            
            
            
            
            
            "date_published": "2019-12-01T00:00:00+00:00",
            "date_modified": "2019-12-01T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2019/07/08/z-notation",
            "title": "Z notation",
            "summary": null,
            "content_text": "I have provided this note on how to write formal specification in the Z notation. Z (after the German mathematician Ernst Zermelo) is a langauage popularised in the 90’s at Oxford and IBM which uses mathematics to create schemas that describe and model computer systems. Here are my particulars:",
            "content_html": "<p>I have provided this note on how to write formal specification in the Z notation. Z (after the German mathematician Ernst Zermelo) is a langauage popularised in the 90’s at Oxford and IBM which uses mathematics to create schemas that describe and model computer systems. Here are my particulars:<br /><br /></p><embed src=\"/assets/images/z.svg\" width=\"80%\" height=\"80%\" />",
            "url": "http://localhost:4000/2019/07/08/z-notation",
            
            
            
            "tags": ["Z","notation","logic","math","specification"],
            
            "date_published": "2019-07-08T00:00:00+01:00",
            "date_modified": "2019-07-08T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2019/05/14/use-cases",
            "title": "Use case decriptions",
            "summary": null,
            "content_text": "A note to show how to convert use descriptions into object-oriented use case diagrams - abstract taken from a report I worked on for a hardware company:",
            "content_html": "<p>A note to show how to convert use descriptions into object-oriented use case diagrams - abstract taken from a report I worked on for a hardware company:</p><p><br /><br /><br /></p><embed src=\"/assets/images/usecases.svg\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" />",
            "url": "http://localhost:4000/2019/05/14/use-cases",
            
            
            
            "tags": ["object-oriented","use-case","diagram","UML"],
            
            "date_published": "2019-05-14T00:00:00+01:00",
            "date_modified": "2019-05-14T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2019/02/20/legacy-uis",
            "title": "Legacy UIs",
            "summary": null,
            "content_text": "I do not think ‘entity life history’ is a common place term in today’s dev communities. These are dialogue diagrams used in the 80’s which I think are tremendously useful for modeling the logic of user interface (UI) interaction.4.1 AHC dialogue structure diagram4.1.1 Function definitionA set of SSADM factored elementary processes descriptions based on (Appendix) (1.1.1…1.1.4) constitute a class of function that triggers an update to system survey report data with a Manager’s cottage appraisal.4.1.2 User interface (UI) specificationBased on its function definition I produce an input/output (I/O) description for ‘Process appraisal’ containing data items that make up the final output dialogue.            From      To      Dataflow      Data Content      Comments                  a.      1.1.2      Survey report      SurveyRequest#SurveydetailsValue      Survey report is received. Details incorporate written information fields only about the property, plus a survey value. OwnerName abbreviates (Forename, Surname).CottageAddress abbreviates each line of an address.              1.1.2      M1      Survey report      SurveyRequest#SurveydetailsValue      Survey report is manually stored on receipt for reference.              M1      1.1.2      Survey report      SurveyRequest#SurveydetailsValue      Survey report is retrieved manually as reference for input request number              1.1.3      D1      Survey      SurveyRequest#      Survey request number from the Survey report is entered into the system.              D1      1.1.3      Survey report      SurveyRequest#CottageAddressOwnerName      The system outputs cottage and owner details.              M1      1.1.3      Survey report      SurveyRequest#SurveydetailsValue      Survey report is retrieved manually to check owner and property details. We are not told whether survey report at this point is transient data.              1.1.4      D1      Survey      SurveyRequest#OwnerName CottageAddress PriceCategory ReasonDetail      PriceCategory depends on Value  in survey report, determining acceptance, while RejectReason is varchar      4.1.2 Dialogue StructureComing soon…",
            "content_html": "<p>I do not think ‘entity life history’ is a common place term in today’s dev communities. These are dialogue diagrams used in the 80’s which I think are tremendously useful for modeling the logic of user interface (UI) interaction.</p><h1 id=\"41-ahc-dialogue-structure-diagram\">4.1 AHC dialogue structure diagram</h1><h2 id=\"411-function-definition\">4.1.1 Function definition</h2><p>A set of SSADM factored elementary processes descriptions based on (Appendix) (1.1.1…1.1.4) constitute a class of function that triggers an update to system survey report data with a Manager’s cottage appraisal.</p><h2 id=\"412-user-interface-ui-specification\">4.1.2 User interface (UI) specification</h2><p>Based on its function definition I produce an input/output (I/O) description for ‘Process appraisal’ containing data items that make up the final output dialogue.</p><table>  <thead>    <tr>      <th>From</th>      <th>To</th>      <th>Dataflow</th>      <th>Data Content</th>      <th>Comments</th>    </tr>  </thead>  <tbody>    <tr>      <td>a.</td>      <td>1.1.2</td>      <td>Survey report</td>      <td>SurveyRequest#<br />Surveydetails<br />Value</td>      <td>Survey report is received. Details incorporate written information fields only about the property, plus a survey value. OwnerName abbreviates (Forename, Surname).<br />CottageAddress abbreviates each line of an address.</td>    </tr>    <tr>      <td>1.1.2</td>      <td>M1</td>      <td>Survey report</td>      <td>SurveyRequest#<br />Surveydetails<br />Value</td>      <td>Survey report is manually stored on receipt for reference.</td>    </tr>    <tr>      <td>M1</td>      <td>1.1.2</td>      <td>Survey report</td>      <td>SurveyRequest#<br />Surveydetails<br />Value</td>      <td>Survey report is retrieved manually as reference for input request number</td>    </tr>    <tr>      <td>1.1.3</td>      <td>D1</td>      <td>Survey</td>      <td>SurveyRequest#</td>      <td>Survey request number from the Survey report is entered into the system.</td>    </tr>    <tr>      <td>D1</td>      <td>1.1.3</td>      <td>Survey report</td>      <td>SurveyRequest#<br />CottageAddress<br />OwnerName</td>      <td>The system outputs cottage and owner details.</td>    </tr>    <tr>      <td>M1</td>      <td>1.1.3</td>      <td>Survey report</td>      <td>SurveyRequest#<br />Surveydetails<br />Value</td>      <td>Survey report is retrieved manually to check owner and property details. We are not told whether survey report at this point is transient data.</td>    </tr>    <tr>      <td>1.1.4</td>      <td>D1</td>      <td>Survey</td>      <td>SurveyRequest#<br />OwnerName CottageAddress PriceCategory ReasonDetail</td>      <td>PriceCategory depends on Value  in survey report, determining acceptance, while RejectReason is varchar</td>    </tr>  </tbody></table><h1 id=\"412-dialogue-structure\">4.1.2 Dialogue Structure</h1><p>Coming soon…</p>",
            "url": "http://localhost:4000/2019/02/20/legacy-uis",
            
            
            
            "tags": ["modeling","dialogue","user","interfaces"],
            
            "date_published": "2019-02-20T00:00:00+00:00",
            "date_modified": "2019-02-20T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2018/10/21/soap-api-notes",
            "title": "SOAP API development",
            "summary": null,
            "content_text": "My analysis and design of a web service from a report that I wrote concerning the use of a Simple Object Access Protocol (SOAP) API.",
            "content_html": "<p>My analysis and design of a web service from a report that I wrote concerning the use of a Simple Object Access Protocol (SOAP) API.</p><object data=\"/assets/webpages/webservice/webservice.htm\" width=\"1050\" height=\"7090\" type=\"text/html\" />",
            "url": "http://localhost:4000/2018/10/21/soap-api-notes",
            
            
            
            "tags": ["API","service","requests","XML"],
            
            "date_published": "2018-10-21T00:00:00+01:00",
            "date_modified": "2018-10-21T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2018/08/12/acitivty-and-sequence",
            "title": "Activity and sequence architecture",
            "summary": null,
            "content_text": "As you will see in Figure 3, when we use a directed graph with nodes that denotes components and control elements of use case, the execution semantics suffices to represent the stepwise actions of its activity diagrammatically. This feature is inherent in an Activity Diagram, but the means of controlling flow is what adds to the uniqueness of its UML in my view. This is owing to the ability to specify actions based on Petri token principles (Reisig, 2012, p. 31). In other words, actions can be conceptualised as activated events e in places p whenever it receives a passing dot (Seidl, et al., 2012, p. 1462). Figure 1 Petri Net (PN) (a) before event (b) after eventFigure 2 Activity diagram Inter-object behaviour is the essence of a Sequence Diagram. If we wanted to specify how partnering objects interact in a use case, this exchange can be plotted as a distribution of sequential messages over time. Accordingly, objects are bound by state transitions with a lifeline connected by message calls that fulfils an executive task. On the flip side, static semantics parallel class organisation used to identify ‘missing objects’ (Bruegge &amp; Dutoit, 2010, p. 1853). So, sequence diagrams are different, for we can cross-reference against the UML’s taxonomy in respect to the structure and behaviour of an objects life. Syntactically, its construct is hierarchical, conforming to an ordered branch of roles r, classes, c and methods m (Li, et al., 2004, pp. 5-84). Figure 3 (a) Sequence (b) hierarchyFigure 4 Sequence diagram            Petri Nets - An introduction. First ed. Berlin : Springer-Verlag. &#8617;              Seidl, M., Scholz, M., Huemer , C. and Kappel , G., 2012. UML@Classroom - An Introduction to Object-Oriented Modeling. First ed. Heidelberg, Germany : Springer International Publishing &#8617;              Bruegge, B. and Dutoit, A.H., 2010. System design: Decomposing the system. &#8617;              Li, X., Liu, Z. and Jifeng, H., 2004. A formal semantics of UML sequence diagram. Macau, 2004 Australian Software Engineering Conference. Proceedings. &#8617;      ",
            "content_html": "<p>As you will see in Figure 3, when we use a directed graph with nodes that denotes components and control elements of use case, the execution semantics suffices to represent the stepwise actions of its activity diagrammatically. This feature is inherent in an Activity Diagram, but the means of controlling flow is what adds to the uniqueness of its UML in my view. This is owing to the ability to specify actions based on Petri token principles (Reisig, 2012, p. 3<sup id=\"fnref:fn1\" role=\"doc-noteref\"><a href=\"#fn:fn1\" class=\"footnote\" rel=\"footnote\">1</a></sup>). In other words, actions can be conceptualised as activated events <em>e</em> in places <em>p</em> whenever it receives a passing dot (Seidl, et al., 2012, p. 146<sup id=\"fnref:fn2\" role=\"doc-noteref\"><a href=\"#fn:fn2\" class=\"footnote\" rel=\"footnote\">2</a></sup>).</p><p> </p><p><img src=\"/assets/images/petrinet.svg\" alt=\"petrinet\" /></p><p><em>Figure 1 Petri Net (PN) (a) before event (b) after event</em></p><p><br /><br /></p><embed src=\"/assets/images/act.svg\" /><p><em>Figure 2 Activity diagram</em></p><p> </p><p>Inter-object behaviour is the essence of a Sequence Diagram. If we wanted to specify how partnering objects interact in a use case, this exchange can be plotted as a distribution of sequential messages over time. Accordingly, objects are bound by state transitions with a lifeline connected by message calls that fulfils an executive task. On the flip side, static semantics parallel class organisation used to identify ‘missing objects’ (Bruegge &amp; Dutoit, 2010, p. 185<sup id=\"fnref:fn3\" role=\"doc-noteref\"><a href=\"#fn:fn3\" class=\"footnote\" rel=\"footnote\">3</a></sup>). So, sequence diagrams are different, for we can cross-reference against the UML’s taxonomy in respect to the structure and behaviour of an objects life. Syntactically, its construct is hierarchical, conforming to an ordered branch of roles <em>r</em>, classes, <em>c</em> and methods <em>m</em> (Li, et al., 2004, pp. 5-8<sup id=\"fnref:fn4\" role=\"doc-noteref\"><a href=\"#fn:fn4\" class=\"footnote\" rel=\"footnote\">4</a></sup>).</p><p> </p><object data=\"http://localhost:4000/assets/images/sequence.svg\" width=\"250\" height=\"250\" type=\"application/pdf\"></object><p><em>Figure 3 (a) Sequence (b) hierarchy</em></p><p><br /><br /></p><embed src=\"/assets/images/seq.svg\" /><p><em>Figure 4 Sequence diagram</em></p><p><br /></p><div class=\"footnotes\" role=\"doc-endnotes\">  <ol>    <li id=\"fn:fn1\" role=\"doc-endnote\">      <p>Petri Nets - An introduction. First ed. Berlin : Springer-Verlag. <a href=\"#fnref:fn1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn2\" role=\"doc-endnote\">      <p>Seidl, M., Scholz, M., Huemer , C. and Kappel , G., 2012. UML@Classroom - An Introduction to Object-Oriented Modeling. First ed. Heidelberg, Germany : Springer International Publishing <a href=\"#fnref:fn2\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn3\" role=\"doc-endnote\">      <p>Bruegge, B. and Dutoit, A.H., 2010. System design: Decomposing the system. <a href=\"#fnref:fn3\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn4\" role=\"doc-endnote\">      <p>Li, X., Liu, Z. and Jifeng, H., 2004. A formal semantics of UML sequence diagram. Macau, 2004 Australian Software Engineering Conference. Proceedings. <a href=\"#fnref:fn4\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>  </ol></div>",
            "url": "http://localhost:4000/2018/08/12/acitivty-and-sequence",
            
            
            
            "tags": ["software","behavior","diagram","flow"],
            
            "date_published": "2018-08-12T00:00:00+01:00",
            "date_modified": "2018-08-12T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2018/05/02/relational-algebra",
            "title": "Relational Algebra",
            "summary": null,
            "content_text": "This is an abstract from a report of mine that I wrote that converts functional requirements from a vehicle garage business specification into formalised contraints using relational algebra.",
            "content_html": "<p>This is an abstract from a report of mine that I wrote that converts functional requirements from a vehicle garage business specification into formalised contraints using relational algebra.</p><object data=\"/assets/webpages/relational_algebra/relational_algebra.htm\" width=\"1050\" height=\"5925\" type=\"text/html\" />",
            "url": "http://localhost:4000/2018/05/02/relational-algebra",
            
            
            
            "tags": ["logic","contraints","specification","SQL"],
            
            "date_published": "2018-05-02T00:00:00+01:00",
            "date_modified": "2018-05-02T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2018/03/07/states",
            "title": "State legal contraints",
            "summary": null,
            "content_text": "Constraints in the use case are derived from non-functional requirements vis-à-vis common dental operations. In particular, recorded information about a Patient must be saved. This ruleis elicited from Standards for the Dental Team 4.1 (General Dental Council, 2014 1). The second constraint, that Patient records must be accessible and kept securely for a maximum 30 years on retention, is partly legislative. The legal parts of this constraint would be retrievable storage of commissioning emails saved to the server via, say, a JavaMail API. The UML standard does allows for Object Constraint Language to supplement models (Object Management Group, 20062). Thus ‘a commissioning email can be stored 30 years minimum can be added as a note that:Context Email inv: self.years-&gt;size()&gt;=30A Patient class could have a modifier that allows visibility for classes only contained within its package to call the fetchEmail method which reduces the extendibility needed for General_administrator.Figure 1 Package diagram showing a restricted messageHowever, time is not statutory since Schedule 1 Data Protection Act (DPA (2008))3 gives no definite scale, leaving the NHS to provide the said years (Information Governance Alliance, 20164). On the other hand, security of information and access is from the DPA, which constrains a nested email to the binary ‘state’ of being Saved to the server.Figure 2 Composite state diagram storing an emailclass Email {    private boolean saved;    private void storeEmail() {    saved=true;    }    Private void Remove() {    saved=false;    }}Figure 3 State pseudocode for candidate email class            General Dental Council, 2014. Focus on standards. Available at: https://standards.gdcuk.org/assets/images/pdf/Standards%20for%20the%20Dental%20Team.pdf &#8617;              Object Management Group, 2006. Object Constraint Language - Available Specification Version 2.0. s.l.:Object Management Group &#8617;              Data Protection Act 2018 Available at: https://www.legislation.gov.uk/ukpga/2018/12/schedule/1/enacted &#8617;              Records Management Code of Practice for Health and Social Care. Available at: https://digital.nhs.uk/records-management-code-of-practice-for-health-andsocial-care-2016 &#8617;      ",
            "content_html": "<p>Constraints in the use case are derived from non-functional requirements vis-à-vis common dental operations. In particular, recorded information about a Patient must be saved. This ruleis elicited from Standards for the Dental Team 4.1 (General Dental Council, 2014 <sup id=\"fnref:fn1\" role=\"doc-noteref\"><a href=\"#fn:fn1\" class=\"footnote\" rel=\"footnote\">1</a></sup>). The second constraint, that Patient records must be accessible and kept securely for a maximum 30 years on retention, is partly legislative. The legal parts of this constraint would be retrievable storage of commissioning emails saved to the server via, say, a JavaMail API. The UML standard does allows for Object Constraint Language to supplement models (Object Management Group, 2006<sup id=\"fnref:fn2\" role=\"doc-noteref\"><a href=\"#fn:fn2\" class=\"footnote\" rel=\"footnote\">2</a></sup>). Thus ‘a commissioning email can be stored 30 years minimum can be added as a note that:</p><p><code class=\"highlighter-rouge\">Context Email inv: self.years-&gt;size()&gt;=30</code></p><p>A Patient <code class=\"highlighter-rouge\">class</code> could have a modifier that allows visibility for classes only contained within its package to call the fetchEmail method which reduces the extendibility needed for General_administrator.</p><p><br /></p><embed src=\"/assets/images/pkg.svg\" /><p><em>Figure 1 Package diagram showing a restricted message</em></p><p><br /></p><p>However, time is not statutory since Schedule 1 Data Protection Act (DPA (2008))<sup id=\"fnref:fn4\" role=\"doc-noteref\"><a href=\"#fn:fn4\" class=\"footnote\" rel=\"footnote\">3</a></sup> gives no definite scale, leaving the NHS to provide the said years (Information Governance Alliance, 2016<sup id=\"fnref:fn5\" role=\"doc-noteref\"><a href=\"#fn:fn5\" class=\"footnote\" rel=\"footnote\">4</a></sup>). On the other hand, security of information and access is from the DPA, which constrains a nested email to the binary ‘state’ of being Saved to the server.</p><p><br /></p><embed src=\"/assets/images/state0.svg\" /><p><br /><img src=\"/assets/images/state1.svg\" alt=\"state1\" title=\"States\" /><br /><br /><em>Figure 2 Composite state diagram storing an email</em></p><div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">class</span> <span class=\"nc\">Email</span> <span class=\"o\">{</span>    <span class=\"kd\">private</span> <span class=\"kt\">boolean</span> <span class=\"n\">saved</span><span class=\"o\">;</span>    <span class=\"kd\">private</span> <span class=\"kt\">void</span> <span class=\"nf\">storeEmail</span><span class=\"o\">()</span> <span class=\"o\">{</span>    <span class=\"n\">saved</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"o\">;</span>    <span class=\"o\">}</span>    <span class=\"nc\">Private</span> <span class=\"kt\">void</span> <span class=\"nf\">Remove</span><span class=\"o\">()</span> <span class=\"o\">{</span>    <span class=\"n\">saved</span><span class=\"o\">=</span><span class=\"kc\">false</span><span class=\"o\">;</span>    <span class=\"o\">}</span><span class=\"o\">}</span></code></pre></div></div><p><em>Figure 3 State pseudocode for candidate email class</em></p><div class=\"footnotes\" role=\"doc-endnotes\">  <ol>    <li id=\"fn:fn1\" role=\"doc-endnote\">      <p>General Dental Council, 2014. Focus on standards. Available at: https://standards.gdcuk.org/assets/images/pdf/Standards%20for%20the%20Dental%20Team.pdf <a href=\"#fnref:fn1\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn2\" role=\"doc-endnote\">      <p>Object Management Group, 2006. Object Constraint Language - Available Specification Version 2.0. s.l.:Object Management Group <a href=\"#fnref:fn2\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn4\" role=\"doc-endnote\">      <p>Data Protection Act 2018 Available at: https://www.legislation.gov.uk/ukpga/2018/12/schedule/1/enacted <a href=\"#fnref:fn4\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>    <li id=\"fn:fn5\" role=\"doc-endnote\">      <p>Records Management Code of Practice for Health and Social Care. Available at: https://digital.nhs.uk/records-management-code-of-practice-for-health-andsocial-care-2016 <a href=\"#fnref:fn5\" class=\"reversefootnote\" role=\"doc-backlink\">&#8617;</a></p>    </li>  </ol></div>",
            "url": "http://localhost:4000/2018/03/07/states",
            
            
            
            "tags": ["state","machine","legal"],
            
            "date_published": "2018-03-07T00:00:00+00:00",
            "date_modified": "2018-03-07T00:00:00+00:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2017/07/28/elasticsearch",
            "title": "Elasticsearch",
            "summary": null,
            "content_text": "CRUD ElasticsearchI have installed elasticsearch locally from elastic.co, the head and marvel plugins, plus Kibana - time to explore.PUTThis creates data:PUT my_deezer/song/1{\"title\": \"Doing All Right\",\"artist\": \"Queen\",\"album\": \"Queen\",\"year\": 1973,\"time\": 269}PUT my_deezer/song/2{\"title\": \"You're My Best Friend\",\"artist\": \"Queen\",\"album\": \"A Night at the Opera\",\"year\": 1975,\"time\": 172}PUT my_deezer/song/3{\"title\": \"Hall of the Mountain King\",\"artist\": \"Savatage\",\"album\": \"Hall of the Mountain King\",\"year\": 1985,\"time\": 355}PUT my_deezer/song/4{\"title\": \"Peace of Mind\",\"artist\": \"Boston\",\"album\": \"Boston\",\"year\": 1976,\"time\": 302}PUT my_deezer/song/5{\"title\": \"Faithfully\",\"artist\": \"Journey\",\"album\": \"Frontiers\",\"year\": 1983,\"time\": 269}More to come…",
            "content_html": "<h1 id=\"crud-elasticsearch\">CRUD Elasticsearch</h1><p>I have installed elasticsearch locally from elastic.co, the head and marvel plugins, plus Kibana - time to explore.</p><h2 id=\"put\">PUT</h2><p>This creates data:</p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>PUT my_deezer/song/1{\"title\": \"Doing All Right\",\"artist\": \"Queen\",\"album\": \"Queen\",\"year\": 1973,\"time\": 269}PUT my_deezer/song/2{\"title\": \"You're My Best Friend\",\"artist\": \"Queen\",\"album\": \"A Night at the Opera\",\"year\": 1975,\"time\": 172}PUT my_deezer/song/3{\"title\": \"Hall of the Mountain King\",\"artist\": \"Savatage\",\"album\": \"Hall of the Mountain King\",\"year\": 1985,\"time\": 355}PUT my_deezer/song/4{\"title\": \"Peace of Mind\",\"artist\": \"Boston\",\"album\": \"Boston\",\"year\": 1976,\"time\": 302}PUT my_deezer/song/5{\"title\": \"Faithfully\",\"artist\": \"Journey\",\"album\": \"Frontiers\",\"year\": 1983,\"time\": 269}</code></pre></div></div><style>img {  border: 1px solid #555;}</style><p><img src=\"/assets/images/elasticsearch.png\" width=\"100%\" height=\"100%\" style=\"display: block; margin: 0 auto\" /></p><p>More to come…</p>",
            "url": "http://localhost:4000/2017/07/28/elasticsearch",
            
            
            
            "tags": ["Elasticsearch","database","AWS","Java","Apache"],
            
            "date_published": "2017-07-28T00:00:00+01:00",
            "date_modified": "2017-07-28T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        },
    
        {
            "id": "http://localhost:4000/2016/04/15/leadership-award",
            "title": "KM Leadership Award",
            "summary": null,
            "content_text": "I have ended up leading my team’s Knowledge Management (KM) lately ovseering the application administration of our SharePoint servers and got this award.The agenda for the benchmarking exercise supports the current intranet project to replace the on premises SharePoint 2013 environment with a SharePoint online environmentCurrent Logical ArchitectureCurrent Physical ArchitectureHMT currently hosts Intranet sites on SharePoint 2013 using customised CSS, Jscript, and Master Pages based on templates. However, SharePoint online has now rolled out more user centric comms site templates tailored for intranet info portals, rather than Teams, which should be easier to meet requirements. I have been working with Corporate Services to Improve collaboration internally within HMT to replace the current on premises SharePoint 2013 environment with the SharePoint online environment to reduce licensing cost and technical footprint within on-premises data centres. KM helps to achieve these goals along with reducing the dependency on email for sharing of data and documentation.Benmakring scores out of 5 - total 97% Knowledge KM is a discipline spanning about 30 years, which has grown to become crucial to today’s IT software industry. It is concerned primarily with information systems and how they can be utitlised to acheive optimised workflows, security, and compliance.",
            "content_html": "<p>I have ended up leading my team’s Knowledge Management (KM) lately ovseering the application administration of our SharePoint servers and got this award.</p><style>img {  border: 1px solid #555;}</style><p><img src=\"/assets/images/kmaward.png\" alt=\"Award\" width=\"100%\" height=\"100%\" /></p><p>The agenda for the benchmarking exercise supports the current intranet project to replace the on premises SharePoint 2013 environment with a SharePoint online environment</p><p><br /></p><embed src=\"/assets/images/hmtlogical.svg\" width=\"100%\" height=\"100%\" /><center><i>Current Logical Architecture</i></center><p><br /><br /></p><embed src=\"/assets/images/hmtphysical.svg\" width=\"80%\" height=\"80%\" /><p><i>Current Physical Architecture</i></p><p>HMT currently hosts Intranet sites on SharePoint 2013 using customised CSS, Jscript, and Master Pages based on templates. However, SharePoint online has now rolled out more user centric comms site templates tailored for intranet info portals, rather than Teams, which should be easier to meet requirements. I have been working with Corporate Services to Improve collaboration internally within HMT to replace the current on premises SharePoint 2013 environment with the SharePoint online environment to reduce licensing cost and technical footprint within on-premises data centres. KM helps to achieve these goals along with reducing the dependency on email for sharing of data and documentation.</p><center><embed src=\"/assets/images/kmbm.png\" width=\"100%\" height=\"100%\" /></center><center><i>Benmakring scores out of 5 - total 97% </i></center><p>Knowledge KM is a discipline spanning about 30 years, which has grown to become crucial to today’s IT software industry. It is concerned primarily with information systems and how they can be utitlised to acheive optimised workflows, security, and compliance.</p>",
            "url": "http://localhost:4000/2016/04/15/leadership-award",
            
            
            
            "tags": ["knowledge","management","information","IT"],
            
            "date_published": "2016-04-15T00:00:00+01:00",
            "date_modified": "2016-04-15T00:00:00+01:00",
            
                "author": 
                "{"twitter"=>nil, "name"=>nil, "avatar"=>nil, "email"=>nil, "url"=>"https://counselconfig.github.io"}"
                
            
        }
    
    ]
}